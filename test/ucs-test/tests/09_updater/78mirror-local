#!/usr/share/ucs-test/runner bash
## desc: |
##  Mirror local repository and blocking component
##  Check locally mirrored repository with blocking component
##  1. Create main and component repositories
##  2. Mirror using u-repository-update
##  3. Install first version
##  4. Mirror and install second version using u-updater
## roles-not: [basesystem]
## tags: [basic]
## packages:
##  - apache2 | apache2-mpm-prefork
##  - apt-mirror
## exposure: dangerous

RETVAL=110 # Test fehlgeschlagen
. pool.sh || exit 137
FIXED_18225=false

# Installing a local package conflicts with secure_apt; skip the test Bug #26668
. /usr/share/univention-lib/ucr.sh
is_ucr_true update/secure_apt && exit 77

# Change repoprefix, because both repositories are hosted on the same server
srcprefix="source-repository-$$-${RANDOM}"
repoprefix="mirrored-repository-$$-${RANDOM}"
compname="test${RANDOM}"

alias="Alias /${repoprefix} ${BASEDIR}/mirror/mirror" \
setup_apache "" # setup server to / for ${repoprefix} and ${srcprefix}

REPODIR="${REPODIR}/${srcprefix}"
mkdir -p "${REPODIR}"

mkpdir "${major}.${minor}-0" maintained "${ARCH}"  # DIRS 0 + 1
mkdeb "${pkgname}ua" 1 all "${DIR_POOL}"
mkpkg "${DIRS[0]}" "${DIR_POOL}"   # ==> ucsXYZ
mkdeb "${pkgname}ub" 1 "${ARCH}" "${DIR_POOL}"
mkpkg "${DIRS[0]}" "${DIR_POOL}"
BDIR+=("${DIR}")
mkdeb "${pkgname}ea" 1 all "${DIR_POOL}"
mkpkg "${DIRS[1]}" "${DIR_POOL}"   # ==> errataXYZ
mkdeb "${pkgname}eb" 1 "${ARCH}" "${DIR_POOL}"
mkpkg "${DIRS[1]}" "${DIR_POOL}"
BDIR+=("${DIR}")
mksh "${DIRS[0]//\/main\/binary-*/}" preup postup  # hint: preup/postup are not required for errataXYZ

mkpdir "${major}.${minor}--component/${compname}" maintained all  # DIRS 2 + 3
mkdeb "${pkgname}ca" 1 all "${DIR}"  # ==> X.Y/maintained/component/${compname}/all
mkpkg "${DIR}" "${DIR}"
mksh "${DIR}" preup postup
BDIR+=("${DIR}")
mkpdir "${major}.${minor}--component/${compname}" maintained "${ARCH}"  # DIRS 4 + 5
mkdeb "${pkgname}cb" 1 "${ARCH}" "${DIR}"  # ==> X.Y/maintained/component/${compname}/${ARCH}
mkpkg "${DIR}" "${DIR}"
BDIR+=("${DIR}")

minor+=1

mkpdir "${major}.${minor}-0" maintained "${ARCH}"  # DIRS 6 + 7
mkdeb "${pkgname}ua" 2 all "${DIR_POOL}"
mkpkg "${DIRS[6]}" "${DIR_POOL}"   # ==> ucsXYZ
mkdeb "${pkgname}ub" 2 "${ARCH}" "${DIR_POOL}"
mkpkg "${DIRS[6]}" "${DIR_POOL}"
CDIR+=("${DIR}")
mkdeb "${pkgname}ea" 2 all "${DIR_POOL}"
mkpkg "${DIRS[7]}" "${DIR_POOL}"   # ==> errataXYZ
mkdeb "${pkgname}eb" 2 "${ARCH}" "${DIR_POOL}"
mkpkg "${DIRS[7]}" "${DIR_POOL}"
CDIR+=("${DIR}")
mksh "${DIRS[6]//\/main\/binary-*/}" preup postup  # hint: preup/postup are not required for errataXYZ

mkpdir "${major}.${minor}--component/${compname}" maintained all  # DIRS 8 + 9
mkdeb "${pkgname}ca" 2 all "${DIR}"
mkpkg "${DIR}" "${DIR}"  # ==> X.Y/maintained/component/${compname}/all
mksh "${DIR}" preup postup
CDIR+=("${DIR}")
mkpdir "${major}.${minor}--component/${compname}" maintained "${ARCH}"  # DIRS 10 + 11
mkdeb "${pkgname}cb" 2 "${ARCH}" "${DIR}"
mkpkg "${DIR}" "${DIR}"  # ==> X.Y/maintained/component/${compname}/${ARCH}
CDIR+=("${DIR}")

minor+=1

mkpdir "${major}.${minor}-0" maintained "${ARCH}"  # DIRS 12 + 13
mkdeb "${pkgname}ua" 3 all "${DIR_POOL}"
mkpkg "${DIRS[12]}" "${DIR_POOL}"   # ==> ucsXYZ
mkdeb "${pkgname}ub" 3 "${ARCH}" "${DIR_POOL}"
mkpkg "${DIRS[12]}" "${DIR_POOL}"
ADIR+=("${DIR}")
mkdeb "${pkgname}ea" 3 all "${DIR_POOL}"
mkpkg "${DIRS[13]}" "${DIR_POOL}"   # ==> errataXYZ
mkdeb "${pkgname}eb" 3 "${ARCH}" "${DIR_POOL}"
mkpkg "${DIRS[13]}" "${DIR_POOL}"
ADIR+=("${DIR}")
mksh "${DIRS[12]//\/main\/binary-*/}" preup postup  # hint: preup/postup are not required for errataXYZ

minor+=-1

comp="repository/online/component/${compname}"
config_mirror "/${srcprefix}" \
	repository/online=yes \
	repository/online/server=localhost \
	repository/online/port=80 \
	repository/online/prefix="${repoprefix}" \
	"${comp}=yes" \
	"${comp}/version=current"
if ! "${FIXED_18225}"
then
	mkdir -p "${BASEDIR}/mirror/mirror"
	ln -s . "${BASEDIR}/mirror/mirror/${repoprefix}"
	ln -s . "${BASEDIR}/mirror/mirror/${srcprefix}"
fi

(
	set -e
	checkapt --mirror "http://localhost\(:80\)\?/${srcprefix}/" "${BDIR[@]}"
	grep -v '^#\|^[[:space:]]*$' /etc/apt/sources.list.d/*.list && false
	univention-repository-update net
	ucr commit /etc/apt/sources.list.d/*.list
	checkapt "http://localhost\(:80\)\?/${repoprefix}/" "${BDIR[@]}"

	apt-get -qq update
	apt-get -qq install "${pkgname}"{u,e,c}{a,b}
	dpkg-query -W "${pkgname}ua" | grep -Fqx "${pkgname}ua	1"
	dpkg-query -W "${pkgname}ub" | grep -Fqx "${pkgname}ub	1"
	dpkg-query -W "${pkgname}ea" | grep -Fqx "${pkgname}ea	1"
	dpkg-query -W "${pkgname}eb" | grep -Fqx "${pkgname}eb	1"
	dpkg-query -W "${pkgname}ca" | grep -Fqx "${pkgname}ca	1"
	dpkg-query -W "${pkgname}cb" | grep -Fqx "${pkgname}cb	1"
	univention-upgrade --ignoressh --noninteractive --disable-app-updates --ignoreterm
	checkapt --mirror "http://localhost\(:80\)\?/${srcprefix}/" "${BDIR[@]}" "${CDIR[@]}"
	checkapt "http://localhost\(:80\)\?/${repoprefix}/" "${BDIR[@]}" "${CDIR[@]}"
	dpkg-query -W "${pkgname}ua" | grep -Fqx "${pkgname}ua	2"
	dpkg-query -W "${pkgname}ub" | grep -Fqx "${pkgname}ub	2"
	dpkg-query -W "${pkgname}ea" | grep -Fqx "${pkgname}ea	2"
	dpkg-query -W "${pkgname}eb" | grep -Fqx "${pkgname}eb	2"
	dpkg-query -W "${pkgname}ca" | grep -Fqx "${pkgname}ca	2"
	dpkg-query -W "${pkgname}cb" | grep -Fqx "${pkgname}cb	2"
	test "${major}.${minor}" = "$(ucr get version/version)"
	test 0 = "$(ucr get version/patchlevel)"
	checkdeb "${pkgname}ua" 1 2
	checkdeb "${pkgname}ub" 1 2
	checkdeb "${pkgname}ea" 1 2
	checkdeb "${pkgname}eb" 1 2
	checkdeb "${pkgname}ca" 1 2
	checkdeb "${pkgname}cb" 1 2
)
[ $? -eq 0 ] && RETVAL=100 # Test bestanden (Keine Fehler)
dpkg -P --force-all "${pkgname}"{,c}{l,y} >&3 2>&3

exit ${RETVAL}
# vim:set ft=sh:
