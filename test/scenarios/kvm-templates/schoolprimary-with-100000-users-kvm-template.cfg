[Global]

# scenario for for creating a ucs@school primary
# with 100.000 users

# These settings can be overwritten by the instance
logfile: autotest.log

# ucs-kt-get kvm settings
kvm_server: [ENV:KVM_BUILD_SERVER]
kvm_user: [ENV:KVM_USER]
kvm_dhcp: 1
kvm_interface: eth0
kvm_extra_label: schoolprimary-with-100000-users-[ENV:UCS_VERSION]
kvm_template: [ENV:KVM_TEMPLATE]
kvm_ucsversion: [ENV:KVM_UCSVERSION]
kvm_architecture: amd64
kvm_memory: 4G

recover: 3

environment:
 UCS_VERSION=[ENV:UCS_VERSION]
 UCS_TEST_RUN=[ENV:UCS_TEST_RUN]
 RELEASE_UPDATE=[ENV:RELEASE_UPDATE]
 ERRATA_UPDATE=[ENV:ERRATA_UPDATE]
 TARGET_VERSION=[ENV:TARGET_VERSION]
 JENKINS_WS=[ENV:JOB_URL]

[primary]
profile:
 hostname="primary"
 domainname="ucs.test"
 windows/domain="UCS"
 ldap/base="dc=ucs,dc=test"
 root_password="univention"
 locale/default="de_DE.UTF-8:UTF-8"
 packages_install=""
 packages_remove=""
 server/role="domaincontroller_master"
command1:
 . utils.sh && basic_setup
 . utils.sh && add_tech_key_authorized_keys
 . utils.sh && upgrade_to_latest_patchlevel
 . utils.sh && rotate_logfiles
 . utils.sh && run_setup_join
 . utils.sh && import_license
 . utils.sh && assert_version "[ENV:TARGET_VERSION]"
 . utils.sh && assert_join
 # some settings for setups with a big database
 ucr set directory/manager/user/primarygroup/update=false
 ucr set nss/group/cachefile/invalidate_interval=disabled
 ucr set ldap/database/mdb/maxsize='4294967296'
 ucr set listener/cache/mdb/maxsize='4294967296'
 ucr set slapd/backup=disbaled
 ucr unset samba4/backup/cron
 ucr set internal/kvm/template/old/ip="$(ucr get interfaces/eth0/address)"
 . utils.sh; activate_ucsschool_repositories
 . utils.sh; install_ucsschool
 . utils.sh; prevent_ucstest_on_fail /root/schoolinstaller.py -uAdministrator -p univention -M
 . utils.sh; run_join_scripts
 univention-app info
 /usr/share/ucs-school-import/scripts/create_ou "--verbose" "School1" "replica1" --displayName="School1" --sharefileserver="replica1"
 /usr/share/ucs-school-import/scripts/create_ou "--verbose" "School2" "replica2" --displayName="School2" --sharefileserver="replica2"
 /usr/share/ucs-school-import/scripts/create_ou "--verbose" "School3" "replica3" --displayName="School3" --sharefileserver="replica3"
 /usr/share/ucs-school-import/scripts/create_ou "--verbose" "School4" "replica4" --displayName="School4" --sharefileserver="replica4"
 /usr/share/ucs-school-import/scripts/ucs-school-testuser-import --verbose --classes 100 --students 40000 --teachers 10000 School1 || true
 /usr/share/ucs-school-import/scripts/ucs-school-testuser-import --verbose --classes 100 --students 20000 --teachers 5000 School2 || true
 /usr/share/ucs-school-import/scripts/ucs-school-testuser-import --verbose --classes 100 --students 20000 --teachers 5000 School3 || true
 # cleanup translog database
 service univention-directory-listener stop
 service univention-directory-notifier stop
 /usr/share/univention-directory-notifier/univention-translog stat
 /usr/share/univention-directory-notifier/univention-translog prune -1000
command2:
 . utils.sh && create_version_file_tmp_ucsver "[ENV:TESTING]"
 GET /tmp/ucs.ver ucs.ver
 . base_appliance.sh && appliance_poweroff
 SSH_DISCONNECT
 SERVER id=$(virsh domid "[SELF_KVM_NAME]") && [ -n "${id#-}" ] && virsh event --domain "$id" --event lifecycle --timeout 120 --timestamp || :
 SOURCE ucs.ver
 SERVER ucs-kt-put -C single -O Others -c "[SELF_KVM_NAME]" "[ucsver]_schoolprimary-with-100000-users_amd64" --remove-old-templates='[ENV:TARGET_VERSION]+e*_schoolprimary-with-100000-users_amd64.tar.gz' --keep-last-templates=1
files:
 ~/ec2/license/license.secret /etc/
