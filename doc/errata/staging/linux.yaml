product: ucs
release: "5.0"
version: [1]
scope: ucs_5.0-0-errata5.0-1
src: linux
fix: 4.19.235-1
desc: |
 This update addresses the following issues:
 * Improper lock operation in btrfs (CVE-2021-4149)
 * Linux PV device frontends vulnerable to attacks by backends T[his CNA
   information record relates to multiple CVEs; the text explains which
   aspects/vulnerabilities correspond to which CVE.] Several Linux PV device
   frontends are using the grant table interfaces for removing access rights
   of the backends in ways being subject to race conditions, resulting in
   potential data leaks, data corruption by malicious backends, and denial of
   service triggered by malicious backends: blkfront, netfront, scsifront and
   the gntalloc driver are testing whether a grant reference is still in use.
   If this is not the case, they assume that a following removal of the
   granted access will always succeed, which is not true in case the backend
   has mapped the granted page between those two operations. As a result the
   backend can keep access to the memory page of the guest no matter how the
   page will be used after the frontend I/O has finished. The xenbus driver
   has a similar problem, as it doesn't check the success of removing the
   granted access of a shared ring buffer. blkfront: CVE-2022-23036 netfront:
   CVE-2022-23037 scsifront: CVE-2022-23038 gntalloc: CVE-2022-23039 xenbus:
   CVE-2022-23040 blkfront, netfront, scsifront, usbfront, dmabuf, xenbus, 9p,
   kbdfront, and pvcalls are using a functionality to delay freeing a grant
   reference until it is no longer in use, but the freeing of the related data
   page is not synchronized with dropping the granted access. As a result the
   backend can keep access to the memory page even after it has been freed and
   then re-used for a different purpose. CVE-2022-23041 netfront will fail a
   BUG_ON() assertion if it fails to revoke access in the rx path. This will
   result in a Denial of Service (DoS) situation of the guest which can be
   triggered by the backend. CVE-2022-23042 (CVE-2022-23036)
 * Linux PV device frontends vulnerable to attacks by backends T[his CNA
   information record relates to multiple CVEs; the text explains which
   aspects/vulnerabilities correspond to which CVE.] Several Linux PV device
   frontends are using the grant table interfaces for removing access rights
   of the backends in ways being subject to race conditions, resulting in
   potential data leaks, data corruption by malicious backends, and denial of
   service triggered by malicious backends: blkfront, netfront, scsifront and
   the gntalloc driver are testing whether a grant reference is still in use.
   If this is not the case, they assume that a following removal of the
   granted access will always succeed, which is not true in case the backend
   has mapped the granted page between those two operations. As a result the
   backend can keep access to the memory page of the guest no matter how the
   page will be used after the frontend I/O has finished. The xenbus driver
   has a similar problem, as it doesn't check the success of removing the
   granted access of a shared ring buffer. blkfront: CVE-2022-23036 netfront:
   CVE-2022-23037 scsifront: CVE-2022-23038 gntalloc: CVE-2022-23039 xenbus:
   CVE-2022-23040 blkfront, netfront, scsifront, usbfront, dmabuf, xenbus, 9p,
   kbdfront, and pvcalls are using a functionality to delay freeing a grant
   reference until it is no longer in use, but the freeing of the related data
   page is not synchronized with dropping the granted access. As a result the
   backend can keep access to the memory page even after it has been freed and
   then re-used for a different purpose. CVE-2022-23041 netfront will fail a
   BUG_ON() assertion if it fails to revoke access in the rx path. This will
   result in a Denial of Service (DoS) situation of the guest which can be
   triggered by the backend. CVE-2022-23042 (CVE-2022-23037)
 * Linux PV device frontends vulnerable to attacks by backends T[his CNA
   information record relates to multiple CVEs; the text explains which
   aspects/vulnerabilities correspond to which CVE.] Several Linux PV device
   frontends are using the grant table interfaces for removing access rights
   of the backends in ways being subject to race conditions, resulting in
   potential data leaks, data corruption by malicious backends, and denial of
   service triggered by malicious backends: blkfront, netfront, scsifront and
   the gntalloc driver are testing whether a grant reference is still in use.
   If this is not the case, they assume that a following removal of the
   granted access will always succeed, which is not true in case the backend
   has mapped the granted page between those two operations. As a result the
   backend can keep access to the memory page of the guest no matter how the
   page will be used after the frontend I/O has finished. The xenbus driver
   has a similar problem, as it doesn't check the success of removing the
   granted access of a shared ring buffer. blkfront: CVE-2022-23036 netfront:
   CVE-2022-23037 scsifront: CVE-2022-23038 gntalloc: CVE-2022-23039 xenbus:
   CVE-2022-23040 blkfront, netfront, scsifront, usbfront, dmabuf, xenbus, 9p,
   kbdfront, and pvcalls are using a functionality to delay freeing a grant
   reference until it is no longer in use, but the freeing of the related data
   page is not synchronized with dropping the granted access. As a result the
   backend can keep access to the memory page even after it has been freed and
   then re-used for a different purpose. CVE-2022-23041 netfront will fail a
   BUG_ON() assertion if it fails to revoke access in the rx path. This will
   result in a Denial of Service (DoS) situation of the guest which can be
   triggered by the backend. CVE-2022-23042 (CVE-2022-23039)
 * Linux PV device frontends vulnerable to attacks by backends T[his CNA
   information record relates to multiple CVEs; the text explains which
   aspects/vulnerabilities correspond to which CVE.] Several Linux PV device
   frontends are using the grant table interfaces for removing access rights
   of the backends in ways being subject to race conditions, resulting in
   potential data leaks, data corruption by malicious backends, and denial of
   service triggered by malicious backends: blkfront, netfront, scsifront and
   the gntalloc driver are testing whether a grant reference is still in use.
   If this is not the case, they assume that a following removal of the
   granted access will always succeed, which is not true in case the backend
   has mapped the granted page between those two operations. As a result the
   backend can keep access to the memory page of the guest no matter how the
   page will be used after the frontend I/O has finished. The xenbus driver
   has a similar problem, as it doesn't check the success of removing the
   granted access of a shared ring buffer. blkfront: CVE-2022-23036 netfront:
   CVE-2022-23037 scsifront: CVE-2022-23038 gntalloc: CVE-2022-23039 xenbus:
   CVE-2022-23040 blkfront, netfront, scsifront, usbfront, dmabuf, xenbus, 9p,
   kbdfront, and pvcalls are using a functionality to delay freeing a grant
   reference until it is no longer in use, but the freeing of the related data
   page is not synchronized with dropping the granted access. As a result the
   backend can keep access to the memory page even after it has been freed and
   then re-used for a different purpose. CVE-2022-23041 netfront will fail a
   BUG_ON() assertion if it fails to revoke access in the rx path. This will
   result in a Denial of Service (DoS) situation of the guest which can be
   triggered by the backend. CVE-2022-23042 (CVE-2022-23040)
 * Linux PV device frontends vulnerable to attacks by backends T[his CNA
   information record relates to multiple CVEs; the text explains which
   aspects/vulnerabilities correspond to which CVE.] Several Linux PV device
   frontends are using the grant table interfaces for removing access rights
   of the backends in ways being subject to race conditions, resulting in
   potential data leaks, data corruption by malicious backends, and denial of
   service triggered by malicious backends: blkfront, netfront, scsifront and
   the gntalloc driver are testing whether a grant reference is still in use.
   If this is not the case, they assume that a following removal of the
   granted access will always succeed, which is not true in case the backend
   has mapped the granted page between those two operations. As a result the
   backend can keep access to the memory page of the guest no matter how the
   page will be used after the frontend I/O has finished. The xenbus driver
   has a similar problem, as it doesn't check the success of removing the
   granted access of a shared ring buffer. blkfront: CVE-2022-23036 netfront:
   CVE-2022-23037 scsifront: CVE-2022-23038 gntalloc: CVE-2022-23039 xenbus:
   CVE-2022-23040 blkfront, netfront, scsifront, usbfront, dmabuf, xenbus, 9p,
   kbdfront, and pvcalls are using a functionality to delay freeing a grant
   reference until it is no longer in use, but the freeing of the related data
   page is not synchronized with dropping the granted access. As a result the
   backend can keep access to the memory page even after it has been freed and
   then re-used for a different purpose. CVE-2022-23041 netfront will fail a
   BUG_ON() assertion if it fails to revoke access in the rx path. This will
   result in a Denial of Service (DoS) situation of the guest which can be
   triggered by the backend. CVE-2022-23042 (CVE-2022-23041)
 * Linux PV device frontends vulnerable to attacks by backends T[his CNA
   information record relates to multiple CVEs; the text explains which
   aspects/vulnerabilities correspond to which CVE.] Several Linux PV device
   frontends are using the grant table interfaces for removing access rights
   of the backends in ways being subject to race conditions, resulting in
   potential data leaks, data corruption by malicious backends, and denial of
   service triggered by malicious backends: blkfront, netfront, scsifront and
   the gntalloc driver are testing whether a grant reference is still in use.
   If this is not the case, they assume that a following removal of the
   granted access will always succeed, which is not true in case the backend
   has mapped the granted page between those two operations. As a result the
   backend can keep access to the memory page of the guest no matter how the
   page will be used after the frontend I/O has finished. The xenbus driver
   has a similar problem, as it doesn't check the success of removing the
   granted access of a shared ring buffer. blkfront: CVE-2022-23036 netfront:
   CVE-2022-23037 scsifront: CVE-2022-23038 gntalloc: CVE-2022-23039 xenbus:
   CVE-2022-23040 blkfront, netfront, scsifront, usbfront, dmabuf, xenbus, 9p,
   kbdfront, and pvcalls are using a functionality to delay freeing a grant
   reference until it is no longer in use, but the freeing of the related data
   page is not synchronized with dropping the granted access. As a result the
   backend can keep access to the memory page even after it has been freed and
   then re-used for a different purpose. CVE-2022-23041 netfront will fail a
   BUG_ON() assertion if it fails to revoke access in the rx path. This will
   result in a Denial of Service (DoS) situation of the guest which can be
   triggered by the backend. CVE-2022-23042 (CVE-2022-23042)
 * cpu: arm64: Spectre-BHB (CVE-2022-23960)
 * use-after-free in dev->buf release in drivers/usb/gadget/legacy/inode.c
   (CVE-2022-24958)
bug: [54607]
cve:
- CVE-2021-4149
- CVE-2022-23036
- CVE-2022-23037
- CVE-2022-23039
- CVE-2022-23040
- CVE-2022-23041
- CVE-2022-23042
- CVE-2022-23960
- CVE-2022-24958
- CVE-2022-23038
