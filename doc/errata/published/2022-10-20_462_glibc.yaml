product: ucs
release: "5.0"
version: [2]
scope: ucs_5.0-0-errata5.0-2
src: glibc
fix: 2.28-10+deb10u2
desc: |
 This update addresses the following issues:
 * `iconv` program can hang when invoked with the option `-c` (CVE-2016-10228)
 * `LD_PREFER_MAP_32BIT_EXEC` not ignored in setuid binaries (CVE-2019-19126)
 * buffer over-read in `iconv` when processing invalid multi-byte input
   sequences in the EUC-KR encoding (CVE-2019-25013)
 * use-after-free in function `glob()` when expanding `~user` (CVE-2020-1752)
 * signed comparison vulnerability in the ARMv7 function `memcpy()`
   (CVE-2020-6096)
 * stack corruption from crafted input in functions `cosl()`, `sinl()`,
   `sincosl()`, and `tanl()` (CVE-2020-10029)
 * `iconv` when processing invalid multi-byte input sequences fails to advance
   the input state, which could result in an infinite loop (CVE-2020-27618)
 * Assertion failure in ISO-2022-JP-3 `gconv` module related to combining
   characters (CVE-2021-3326)
 * Off-by-one buffer overflow/underflow in `getcwd()` (CVE-2021-3999)
 * Use-after-free in function `addgetnetgrentX()` in `netgroupcache.c`
   (CVE-2021-27645)
 * `mq_notify()` does not handle separately allocated thread attributes
   (CVE-2021-33574)
 * Arbitrary read in `wordexp()` (CVE-2021-35942)
 * Stack-based buffer overflow in `svcunix_create()` via long pathnames
   (CVE-2022-23218)
 * Stack-based buffer overflow in SunRPC `clnt_create()` via a long pathname
   (CVE-2022-23219)
bug: [55326]
cve:
- CVE-2016-10228
- CVE-2019-19126
- CVE-2019-25013
- CVE-2020-1752
- CVE-2020-6096
- CVE-2020-10029
- CVE-2020-27618
- CVE-2021-3326
- CVE-2021-3999
- CVE-2021-27645
- CVE-2021-33574
- CVE-2021-35942
- CVE-2022-23218
- CVE-2022-23219
erratum: 462
announced: 2022-10-20
