# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021-2022, Univention GmbH
# This file is distributed under the same license as the Univention
# Corporate Server - Manual for users and administrators package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Univention Corporate Server - Manual for users and "
"administrators \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-04-21 12:53+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../domain-ldap/admin-diary.rst:4
msgid "Protocol of activities in the domain"
msgstr ""

#: ../../domain-ldap/admin-diary.rst:6
msgid ""
"The *Admin Diary* app provides the facility to log important events "
"happening in the domain. This includes among others:"
msgstr ""

#: ../../domain-ldap/admin-diary.rst:9
msgid ""
"Creation, move, modification and deletion of users and other objects "
"using |UCSUDM|"
msgstr ""

#: ../../domain-ldap/admin-diary.rst:12
msgid "Installation, update and deinstallation of apps"
msgstr ""

#: ../../domain-ldap/admin-diary.rst:14
msgid "Server password changes"
msgstr ""

#: ../../domain-ldap/admin-diary.rst:16
msgid "Start, end and eventual failures of domain joins"
msgstr ""

#: ../../domain-ldap/admin-diary.rst:18
msgid "Start and end of UCS updates"
msgstr ""

#: ../../domain-ldap/admin-diary.rst:25
msgid "View of events in Admin Diary"
msgstr ""

#: ../../domain-ldap/admin-diary.rst:27
msgid ""
":numref:`domain-ldap-admindiary-list` shows, how events are shown in the "
"UMC module :guilabel:`Admin Diary`. By default the displayed entries are "
"grouped by week and can additionally be filtered through the search "
"field. Selecting an entry from the list opens a dialog showing additional"
" details about the who and when of the event, as shown in :numref"
":`domain-ldap-admindiary-detail`. Moreover there is the possibility to "
"comment each event."
msgstr ""

#: ../../domain-ldap/admin-diary.rst:39
msgid "Detail view in Admin Diary"
msgstr ""

#: ../../domain-ldap/admin-diary.rst:41
msgid "The app consists of two components:"
msgstr ""

#: ../../domain-ldap/admin-diary.rst:48
msgid "Admin Diary back end"
msgstr ""

#: ../../domain-ldap/admin-diary.rst:44
msgid ""
"The back end must be installed on one system in the domain before the "
"front end can be installed. It includes a customization for "
":program:`rsyslog` and writes into a central database, which defaults to "
"PostgreSQL. If MariaDB or MySQL is already installed on the target "
"system, it will be used instead of PostgreSQL."
msgstr ""

#: ../../domain-ldap/admin-diary.rst:58
msgid "Admin Diary front end"
msgstr ""

#: ../../domain-ldap/admin-diary.rst:51
msgid ""
"Likewise the front end must be installed at least once, but more "
"installations are also possible. The front end includes the UMC module "
":guilabel:`Admin Diary`, which is used to show and comment the entries. "
"When installing it on a different host than where the back end is "
"installed, access to the central database needs to be configured "
"manually. The required steps for this are described in `Admin Diary - How"
" to separate front end and back end <univention-kb-admin-diary-separate-"
"frontend-backend_>`_."
msgstr ""

#: ../../domain-ldap/backup2master.rst:4
msgid "Converting a |UCSBACKUPDN| backup to the new |UCSPRIMARYDN|"
msgstr ""

#: ../../domain-ldap/backup2master.rst:8
msgid ""
"A UCS domain consists of only one |UCSPRIMARYDN|, but is not limited in "
"the number of |UCSBACKUPDN|. A |UCSBACKUPDN| stores all the domain data "
"and all SSL security certificates as read-only copies. However, in "
"contrast to the |UCSPRIMARYDN|, writing changes are not allowed."
msgstr ""

#: ../../domain-ldap/backup2master.rst:13
msgid ""
"Any |UCSBACKUPDN| can be converted to a |UCSPRIMARYDN|. There are two "
"typical scenarios for this:"
msgstr ""

#: ../../domain-ldap/backup2master.rst:16
msgid "In an emergency if the hardware of the |UCSPRIMARYDN| fails."
msgstr ""

#: ../../domain-ldap/backup2master.rst:18
msgid ""
"To replace a fully functional |UCSPRIMARYDN| with new hardware or "
"changing the architecture from *i386* to *amd64*."
msgstr ""

#: ../../domain-ldap/backup2master.rst:23
msgid ""
"The conversion of a |UCSBACKUPDN| to a |UCSPRIMARYDN| is a serious "
"configuration change and should be prepared carefully. The conversion "
"cannot be reversed."
msgstr ""

#: ../../domain-ldap/backup2master.rst:27
msgid ""
"The |UCSPRIMARYDN| that is going to be replaced has to be shut down "
"before the conversion. It must not be powered on during or after the "
"conversion!"
msgstr ""

#: ../../domain-ldap/backup2master.rst:30
msgid ""
"Before the conversion, the installed software packages and the current "
"configuration has to be compared between the |UCSPRIMARYDN| and "
"|UCSBACKUPDN|. If the |UCSPRIMARYDN| is not available anymore, use a file"
" backup. After the conversion, all possibly remaining references of the "
"old |UCSPRIMARYDN| have to be removed or changed to the new "
"|UCSPRIMARYDN|."
msgstr ""

#: ../../domain-ldap/backup2master.rst:36
msgid ""
"The conversion primarily involves the changeover of the services relevant"
" for authentication such as LDAP, DNS, Kerberos and Samba. The installed "
"software needs to be adjusted manually (this can be done using the UMC "
"modules :guilabel:`App Center` or :guilabel:`Package Management`)."
msgstr ""

#: ../../domain-ldap/backup2master.rst:41
msgid ""
"For example, if the mail component was installed on the previous "
"|UCSPRIMARYDN|, it will not be automatically installed on the new "
"|UCSPRIMARYDN| after the conversion. To minimize manual changes after the"
" conversion, please consider :ref:`domain-fault-tolerant`."
msgstr ""

#: ../../domain-ldap/backup2master.rst:46
msgid ""
"If additional LDAP schema packages were installed on the |UCSPRIMARYDN|, "
"they must also be installed on the |UCSBACKUPDN| prior to the conversion."
" The package list of the old |UCSPRIMARYDN| should be saved prior to the "
"promotion in order to allow a subsequent comparison of the installed "
"packages. The package list can be created with the following command:"
msgstr ""

#: ../../domain-ldap/backup2master.rst:52
msgid "$ dpkg --get-selections \\* >> dpkg.selection"
msgstr ""

#: ../../domain-ldap/backup2master.rst:57
msgid ""
"This file should be compared with the same output on the |UCSBACKUPDN|.  "
"Missing packages should then be installed on the |UCSBACKUPDN|. "
"Especially those packages that install a LDAP schema are absolutely "
"necessary. The following command executed on the |UCSPRIMARYDN| will list"
" all affected packages:"
msgstr ""

#: ../../domain-ldap/backup2master.rst:62
msgid ""
"$ dpkg -S /etc/ldap/schema/*.schema \\\n"
"> /usr/share/univention-ldap/schema/*.schema"
msgstr ""

#: ../../domain-ldap/backup2master.rst:68
msgid ""
"To simply install all packages of the |UCSPRIMARYDN| also on the "
"|UCSBACKUPDN|, use the previously created file :file:`dpkg.selection` of "
"the |UCSPRIMARYDN| and run the following command on the |UCSBACKUPDN|:"
msgstr ""

#: ../../domain-ldap/backup2master.rst:72
msgid ""
"$ dpkg --set-selections < dpkg.selection\n"
"$ apt-get dselect-upgrade"
msgstr ""

#: ../../domain-ldap/backup2master.rst:77
msgid ""
"In addition, the |UCSUCR| inventory needs to be saved so that it is "
"possible to compare the configuration adjustments on the new "
"|UCSPRIMARYDN|. The following files on the |UCSPRIMARYDN| need to be "
"compared with those on the |UCSBACKUPDN|:"
msgstr ""

#: ../../domain-ldap/backup2master.rst:81
msgid ":file:`/etc/univention/base.conf`"
msgstr ""

#: ../../domain-ldap/backup2master.rst:82
msgid ":file:`/etc/univention/base-forced.conf`"
msgstr ""

#: ../../domain-ldap/backup2master.rst:84
#, python-format
msgid ""
"UCS saves a copy of those files every night to :file:`/var/univention-"
"backup/ucr-backup_%Y%m%d.tgz`."
msgstr ""

#: ../../domain-ldap/backup2master.rst:87
msgid ""
"The conversion of a |UCSBACKUPDN| to the new |UCSPRIMARYDN| is performed "
"by running the command :command:`/usr/lib/univention-ldap/univention-"
"backup2master` on the |UCSBACKUPDN|. The system must be rebooted after "
"the conversion. The process is logged to "
":file:`/var/log/univention/backup2master.log` The following steps are "
"performed by :command:`univention-backup2master`:"
msgstr ""

#: ../../domain-ldap/backup2master.rst:93
msgid ""
"Checking the environment: The system must be a |UCSBACKUPDN| that already"
" joined the domain. Additionally, it is checked if the |UCSPRIMARYDN| can"
" be resolved via DNS and if the repository server can be reached. Also, "
"the |UCSPRIMARYDN| must be powered off and not reachable anymore."
msgstr ""

#: ../../domain-ldap/backup2master.rst:98
msgid ""
"Now, the most important services OpenLDAP, Samba, Kerberos and |UCSUDN| "
"and Listener will be stopped. Important |UCSUCRV|, such as "
":envvar:`ldap/master` and :envvar:`server/role` will be changed. The UCS "
"Root CA certificate will be available via the web server on the "
"|UCSBACKUPDN|. All mentioned services will be started again."
msgstr ""

#: ../../domain-ldap/backup2master.rst:104
msgid ""
"The DNS SRV record ``kerberos-adm`` will be changed from the old to the "
"new |UCSPRIMARYDN|."
msgstr ""

#: ../../domain-ldap/backup2master.rst:107
msgid ""
"If present, the Univention S4 Connector (see :ref:`windows-s4-connector`)"
" will be removed from the computer object of the old |UCSPRIMARYDN| and "
"will be scheduled for re-configuration on the new |UCSPRIMARYDN|."
msgstr ""

#: ../../domain-ldap/backup2master.rst:111
msgid ""
"The server role of the new |UCSPRIMARYDN| will be changed to "
"``domaincontroller_master`` in the OpenLDAP directory service. The DNS "
"SRV record ``_domaincontroller_master._tcp`` will also be adjusted."
msgstr ""

#: ../../domain-ldap/backup2master.rst:115
msgid ""
"If present, all entries of the old |UCSPRIMARYDN| will be removed from "
"the local Samba directory service. Additionally, the FSMO roles will be "
"transferred to the new |UCSPRIMARYDN|."
msgstr ""

#: ../../domain-ldap/backup2master.rst:119
msgid ""
"The computer object of the old |UCSPRIMARYDN| will be deleted from "
"OpenLDAP."
msgstr ""

#: ../../domain-ldap/backup2master.rst:121
msgid ""
"The OpenLDAP directory service will be searched for any remaining "
"references to the old |UCSPRIMARYDN|. All found references (e.g. DNS "
"records) are shown and suggested to be fixed. The suggested fixes have to"
" be checked and confirmed one by one."
msgstr ""

#: ../../domain-ldap/backup2master.rst:126
msgid ""
"Finally, the package :program:`univention-server-backup` will be replaced"
" by :program:`univention-server-master`."
msgstr ""

#: ../../domain-ldap/backup2master.rst:129
msgid ""
"Subsequently, the LDAP directory on the new |UCSPRIMARYDN| and the "
"|UCSUCR| values on all UCS systems of the domain should be checked for "
"any remaining references to the hostname or the IP address of the old "
"|UCSPRIMARYDN|. Those references need to be adjusted to the new "
"|UCSPRIMARYDN|, too."
msgstr ""

#: ../../domain-ldap/domain-join.rst:4
msgid "Joining domains"
msgstr ""

#: ../../domain-ldap/domain-join.rst:8
msgid "A UCS, Ubuntu or Windows system must join the domain after installation."
msgstr ""

#: ../../domain-ldap/domain-join.rst:10
msgid ""
"In addition to UCS, Ubuntu and macOS, arbitrary Unix systems can be "
"integrated into the domain. This is described in :cite:t:`ext-doc-"
"domain`."
msgstr ""

#: ../../domain-ldap/domain-join.rst:16
msgid "How UCS systems join domains"
msgstr ""

#: ../../domain-ldap/domain-join.rst:18
msgid ""
"There are three possibilities for a UCS system to join an existing "
"domain; directly after installation in the Univention Installer (see :ref"
":`installation-domain-settings-join-ucs-domain`) or subsequently using "
"either the command :command:`univention-join` or the UMC module "
":guilabel:`Domain join`."
msgstr ""

#: ../../domain-ldap/domain-join.rst:24
msgid ""
"The |UCSPRIMARYDN| should always be installed at the most up-to-date "
"release stand of the domains, as problems can arise with an outdated "
"|UCSPRIMARYDN| when a system using the current version joins."
msgstr ""

#: ../../domain-ldap/domain-join.rst:28
msgid ""
"When a computer joins, a computer account is created, the SSL "
"certificates are synchronized and an LDAP copy is initiated if necessary."
" The *join scripts* are also run at the end of the join process. These "
"register further objects, etc., in the directory service using the "
"software packages installed on the system (see :ref:`domain-ldap-"
"joinscripts`)."
msgstr ""

#: ../../domain-ldap/domain-join.rst:35
msgid ""
"The joining of the domain is registered on the client side in the "
":file:`/var/log/univention/join.log` log file, which can be used for "
"reference in error analysis. Actions run on the |UCSPRIMARYDN| are stored"
" in the :file:`/home/<Join-Account>/.univention-server-join.log` log "
"file."
msgstr ""

#: ../../domain-ldap/domain-join.rst:40
msgid ""
"The joining process can be repeated at any time. Systems may even be "
"required to rejoin following certain administrative steps (such as "
"changes to important system features on the |UCSPRIMARYDN|)."
msgstr ""

#: ../../domain-ldap/domain-join.rst:47
msgid "Subsequent domain joins with *univention-join*"
msgstr ""

#: ../../domain-ldap/domain-join.rst:51
msgid ""
":command:`univention-join` retrieves a number of essential parameters "
"interactively; however, it can also be configured using a number of "
"parameters:"
msgstr ""

#: ../../domain-ldap/domain-join.rst:56
msgid ""
"The |UCSPRIMARYDN| is usually detected via a DNS request. If that is not "
"possible (e.g., a |UCSREPLICADN| server with a different DNS domain is "
"set to join), the computer name of the |UCSPRIMARYDN| can also be entered"
" directly using the ``-dcname HOSTNAME`` parameter. The computer name "
"must then be entered as a fully qualified name, e.g., "
"``primary.company.com``."
msgstr ""

#: ../../domain-ldap/domain-join.rst:64
msgid ""
"A user account which is authorized to add systems to the UCS domains is "
"called a join account. By default, this is the ``Administrator`` user or "
"a member of the two groups ``Domain Admins`` and ``DC Backup Hosts``. The"
" join account can be assigned using the ``-dcaccount ACCOUNTNAME`` "
"parameter."
msgstr ""

#: ../../domain-ldap/domain-join.rst:71
msgid ""
"The password can be set using the ``-dcpwd FILE`` parameter. The password"
" is then read out of the specified file."
msgstr ""

#: ../../domain-ldap/domain-join.rst:76
msgid ""
"The ``-verbose`` parameter is used to add additional debug output to the "
"log files, which simplify the analysis in case of errors."
msgstr ""

#: ../../domain-ldap/domain-join.rst:82
msgid "Joining domains via |UCSUMC| module"
msgstr ""

#: ../../domain-ldap/domain-join.rst:84
msgid ""
"A domain join can also be carried out web based via the UMC module "
":guilabel:`Domain join`. As the *Administrator* user does not yet exist "
"on a system which has yet to join the domain, the login to the module is "
"done as user ``root``."
msgstr ""

#: ../../domain-ldap/domain-join.rst:89
msgid ""
"As for the domain joining procedure via the command line, username and "
"password of a user account authorized to add computers to a domain must "
"be entered in the resulting dialogue. Likewise, the |UCSPRIMARYDN| will "
"be determined automatically via a DNS request, but can also be entered "
"manually."
msgstr ""

#: ../../domain-ldap/domain-join.rst:94
msgid ""
"The :guilabel:`Rejoin` option can be used to repeat the domain join at "
"any time."
msgstr ""

#: ../../domain-ldap/domain-join.rst:99
msgid "Join scripts / Unjoin scripts"
msgstr ""

#: ../../domain-ldap/domain-join.rst:101
msgid ""
"*Join scripts* are run during the domain join. Examples for changes made "
"by join scripts are the registration of a print server in the domain or "
"the adaptation of DNS entries. Join scripts are components of the "
"individual software packages. In the same way, there are also *unjoin "
"scripts*, which can reset these changes following deinstallation of "
"software components."
msgstr ""

#: ../../domain-ldap/domain-join.rst:107
msgid ""
"Join scripts are stored in the :file:`/usr/lib/univention-install/` "
"directory and unjoin scripts in :file:`/usr/lib/univention-uninstall/`. "
"Each join/unjoin script has a version. An example: A package has already "
"been installed and the join script already run. The new version of the "
"package now requires additional changes and the version number of the "
"join script is increased."
msgstr ""

#: ../../domain-ldap/domain-join.rst:113
msgid ""
"The :command:`univention-check-join-status` command can be used to check "
"whether join/unjoin scripts need to be run (either because they have yet "
"to be run or an older version was run)."
msgstr ""

#: ../../domain-ldap/domain-join.rst:120
msgid "Subsequent running of join scripts"
msgstr ""

#: ../../domain-ldap/domain-join.rst:121
msgid ""
"If there are join/unjoin scripts on a system which have not yet been run "
"or which can only be run for an older version, a warning message is shown"
" upon opening a UMC module."
msgstr ""

#: ../../domain-ldap/domain-join.rst:125
msgid ""
"Join scripts that have not been run can be executed via the UMC module "
":guilabel:`Domain join` by clicking on the menu entry :guilabel:`Execute "
"all pending join scripts`."
msgstr ""

#: ../../domain-ldap/domain-join.rst:129
msgid ""
"The :command:`univention-run-join-scripts` command is used to run all of "
"the join/unjoin scripts installed on a system. The scripts check "
"automatically whether they have already been executed."
msgstr ""

#: ../../domain-ldap/domain-join.rst:133
msgid ""
"The name of the join/unjoin script and the output of the script are also "
"recorded in :file:`/var/log/univention/join.log`."
msgstr ""

#: ../../domain-ldap/domain-join.rst:136
msgid ""
"If :command:`univention-run-join-scripts` is run on another system role "
"than the |UCSPRIMARYDN|, the user will be asked to input a username and "
"password. This can be performed on the |UCSPRIMARYDN| via the ``--ask-"
"pass`` option."
msgstr ""

#: ../../domain-ldap/domain-join.rst:143
msgid "Windows domain joins"
msgstr ""

#: ../../domain-ldap/domain-join.rst:145
msgid ""
"The procedure for joining a Windows system to a UCS domain made available"
" via Samba is now described as an example for Windows 10 and Windows 2012"
" / 2016 / 2019. The process is similar for other Windows versions. In "
"addition to the client versions, Windows server systems can also join the"
" domain. Windows servers join the domain as member servers; joining a "
"Windows systems as a domain controller is not supported. Further "
"information can be found in :ref:`windows-services-for-windows`."
msgstr ""

#: ../../domain-ldap/domain-join.rst:153
msgid ""
"Only domain-compatible Windows versions can join the UCS domain, i.e., it"
" is not possible for the Home versions of Windows to join a domain."
msgstr ""

#: ../../domain-ldap/domain-join.rst:156
msgid ""
"A host account is created for the Windows client automatically when it "
"joins the domain (see :ref:`computers-hostaccounts`). Information "
"concerning MAC and IP addresses, the network, DHCP or DNS can be "
"configured via UMC modules prior to or after joining the domain."
msgstr ""

#: ../../domain-ldap/domain-join.rst:161
msgid ""
"Domain joining is usually performed with the local Administrator account "
"on the Windows system."
msgstr ""

#: ../../domain-ldap/domain-join.rst:164
msgid ""
"Joining the domain takes some time and the process must not be canceled "
"prematurely. After successful joining a small window appears with the "
"message *Welcome to the domain <your domain name>*. This should be "
"confirmed with :guilabel:`OK`. The computer must then be restarted for "
"the changes to take effect."
msgstr ""

#: ../../domain-ldap/domain-join.rst:170
msgid ""
"Domain names must be limited to 13 characters as they are otherwise "
"truncated at the Windows client and this can lead to sign in errors."
msgstr ""

#: ../../domain-ldap/domain-join.rst:173
msgid ""
"For a domain join against a domain controller based on Samba/AD, the DNS "
"configuration of the client must be set up in such a way that DNS entries"
" from the DNS zone of the UCS domain can also be resolved. In addition, "
"the time on the client system must also be synchronized with the time on "
"the domain controller."
msgstr ""

#: ../../domain-ldap/domain-join.rst:182
msgid "Windows 10"
msgstr ""

#: ../../domain-ldap/domain-join.rst:184
msgid ""
"The joining of domains is only possible with the Pro and Enterprise "
"editions of Windows 10."
msgstr ""

#: ../../domain-ldap/domain-join.rst:187
msgid ""
"The control panel can be reached via the search field :guilabel:`Search "
"the web and Windows`, which can be found in the start bar. Under "
":menuselection:`System and Security --> System` it must be clicked on "
":menuselection:`Change settings --> Change`."
msgstr ""

#: ../../domain-ldap/domain-join.rst:192
msgid ""
"The :guilabel:`Domain` option field must be ticked and the name of the "
"domain must be entered in the input field for the domain join. The full "
"domain name should be used, e.g. ``mydomain.intranet``. After clicking on"
" the :guilabel:`OK` button, the username of a domain administrator must "
"be entered in the input field :guilabel:`Username`, by default this is "
"``Administrator``. The password of the domain administrator has to be "
"entered in the input field :guilabel:`Password`. Finally, the process for"
" joining the domain can then be started by clicking on :guilabel:`OK`."
msgstr ""

#: ../../domain-ldap/domain-join.rst:204
msgid "Windows Server 2012 / 2016 / 2019"
msgstr ""

#: ../../domain-ldap/domain-join.rst:206
msgid ""
"The control panel can be reached by moving the cursor to the bottom "
"right-hand corner of the screen. The *Control Panel* can then be searched"
" for under :menuselection:`Search --> Apps`. :menuselection:`Change "
"settings --> Network ID` must be clicked on under :menuselection:`System "
"and Security --> System`."
msgstr ""

#: ../../domain-ldap/domain-join.rst:211
msgid ""
"The :guilabel:`Domain` option field must be ticked and the name of the "
"Samba domain entered in the input field for the domain join. After "
"clicking on the :guilabel:`OK` button, the username ``Administrator`` "
"must be entered in the input field :guilabel:`Name` and the password from"
" ``uid=Administrator,cn=users,<LDAP base DN`` transferred to the "
":guilabel:`Password` input field. The process for joining the domain can "
"then be started by clicking on :guilabel:`OK`."
msgstr ""

#: ../../domain-ldap/domain-join.rst:222
msgid "Ubuntu domain joins"
msgstr ""

#: ../../domain-ldap/domain-join.rst:224
msgid ""
"Univention provides the :program:`Univention Domain Join Assistant` to "
"integrate Ubuntu clients into a UCS domain. Documentation and "
"installation instructions are available at `Github <github-univention-"
"domain-join_>`_."
msgstr ""

#: ../../domain-ldap/domain-join.rst:231
msgid "macOS domain joins"
msgstr ""

#: ../../domain-ldap/domain-join.rst:233
msgid ""
"UCS supports domain joins of macOS clients into a UCS environment using "
"Samba/AD. This documentation refers to macOS 10.8.2."
msgstr ""

#: ../../domain-ldap/domain-join.rst:236
msgid ""
"The domain join can be performed using the system preferences menu or the"
" :command:`dsconfigad` command line tool."
msgstr ""

#: ../../domain-ldap/domain-join.rst:239
msgid ""
"After the domain join it is possible to automatically mount CIFS shares "
"to subfolders in :file:`/Volumes` when logging in with a domain user. For"
" that, the following line has to be added to the file "
":file:`/etc/auto_master`:"
msgstr ""

#: ../../domain-ldap/domain-join.rst:246
msgid "/Volumes     auto_custom"
msgstr ""

#: ../../domain-ldap/domain-join.rst:249
msgid ""
"In addition, the file :file:`/etc/auto_custom` needs to be created and "
"the shares which should be mounted have to be listed in it in the "
"following way:"
msgstr ""

#: ../../domain-ldap/domain-join.rst:254
msgid "<SUBFOLDER_NAME>    -fstype=smbfs    ://<FQDN>/<SHARE_NAME>"
msgstr ""

#: ../../domain-ldap/domain-join.rst:257
msgid ""
"Note that the automatically mounted shares are not displayed in the "
"finder's sidebar."
msgstr ""

#: ../../domain-ldap/domain-join.rst:262
msgid "Domain join using the system preferences GUI"
msgstr ""

#: ../../domain-ldap/domain-join.rst:264
msgid ""
"In the System Preferences via the :guilabel:`Users & Groups` entry, the "
":guilabel:`Login menu` can be reached. After authenticating by clicking "
"on the lock in the lower left corner and providing credentials of a local"
" *Administrator* account, the :guilabel:`Network Account Server: Join` "
"button needs to be clicked. From that menu it is possible to open the "
":guilabel:`Directory Utility`."
msgstr ""

#: ../../domain-ldap/domain-join.rst:277
msgid "Domain join of a macOS system"
msgstr ""

#: ../../domain-ldap/domain-join.rst:279
msgid ""
"In the advanced options section, the option :guilabel:`Create mobile "
"account at login` should be activated. A mobile account has the advantage"
" that, when the domain is not available, the user can log into the macOS "
"system with the same account used for logging into the domain."
msgstr ""

#: ../../domain-ldap/domain-join.rst:284
msgid ""
"After filling in the domain name in the field :guilabel:`Active Directory"
" Domain` and the hostname of the macOS client in the field "
":guilabel:`Computer ID`, the join process is initiated after clicking the"
" button :guilabel:`Bind...`. The username and password of an account in "
"the ``Domain Admins`` group needs to be entered, e.g., ``Administrator``."
msgstr ""

#: ../../domain-ldap/domain-join.rst:293
msgid "Domain join on the command line"
msgstr ""

#: ../../domain-ldap/domain-join.rst:295
msgid ""
"The domain join can also be performed on the command line using "
":command:`dsconfigad`:"
msgstr ""

#: ../../domain-ldap/domain-join.rst:298
msgid ""
"$ dsconfigad -a <MAC HOSTNAME> \\\n"
"> -domain <FQDN> \\\n"
"> -ou \"CN=Computers,<LDAP base DN>\" \\\n"
"> -u <Domain Administrator> \\\n"
"> -mobile enable"
msgstr ""

#: ../../domain-ldap/domain-join.rst:306
msgid ""
"Additional configuration options are available through "
":command:`dsconfigad -help`."
msgstr ""

#: ../../domain-ldap/fault-tolerant-setup.rst:4
msgid "Fault-tolerant domain setup"
msgstr ""

#: ../../domain-ldap/fault-tolerant-setup.rst:6
msgid ""
"In a domain exist some services that are important for the functionality "
"of all of its members. Redundancy can be used to remove those single "
"points of failure. An article in the Univention Support database explains"
" how to secure LDAP, Kerberos, DNS, DHCP and Active Directory-compatible "
"Domain Controllers: :uv:kb:`Fail-safe domain setup <6682>`."
msgstr ""

#: ../../domain-ldap/index.rst:40
msgid "Chapter contents"
msgstr ""

#: ../../domain-ldap/index.rst:5
msgid "Domain services / LDAP directory"
msgstr ""

#: ../../domain-ldap/index.rst:7
msgid ""
"Univention Corporate Server offers a cross platform domain concept with a"
" common trust context between Linux and/or Windows systems. Within this "
"domain a user is known to all systems via their username and password "
"stored in the |UCSUMS| and can use all services which are authorized for "
"them. The management system keeps the account synchronized for the "
"windows login, Linux/POSIX systems and Kerberos. The management of user "
"accounts is described in :ref:`users-general`."
msgstr ""

#: ../../domain-ldap/index.rst:14
msgid ""
"All UCS and Windows systems within a UCS domain have a host domain "
"account. This allows system-to-system authentication. Domain joining is "
"described in :ref:`domain-join`."
msgstr ""

#: ../../domain-ldap/index.rst:18
msgid ""
"The certificate authority (CA) of the UCS domain is operated on the "
"|UCSPRIMARYDN|. A SSL certificate is generated there for every system "
"that has joined the domain. Further information can be found in :ref"
":`domain-ssl`."
msgstr ""

#: ../../domain-ldap/index.rst:22
msgid ""
"Every computer system which is a member of a UCS domain has a system "
"role. This system role represents different permissions and restrictions,"
" which are described in :ref:`system-roles`."
msgstr ""

#: ../../domain-ldap/index.rst:26
msgid ""
"All domain-wide settings are stored in a directory service on the basis "
"of OpenLDAP. :ref:`domain-ldap` describes how to expand the managed "
"attributes with LDAP scheme expansions, how to set up an audit-compliant "
"LDAP documentation system and how to define access permissions to the "
"LDAP directory."
msgstr ""

#: ../../domain-ldap/index.rst:31
msgid ""
"Replication of the directory data within a UCS domain occurs via the "
"Univention Directory Listener / Notifier mechanism. Further information "
"can be found in :ref:`domain-listener-notifier`."
msgstr ""

#: ../../domain-ldap/index.rst:35
msgid ""
"Kerberos is an authentication framework the purpose of which is to permit"
" secure identification in the potentially insecure connections of "
"decentralized networks. Every UCS domain operates its own Kerberos trust "
"context (realm). Further information can be found in :ref:`domain-"
"kerberos`."
msgstr ""

#: ../../domain-ldap/kerberos.rst:4
msgid "Kerberos"
msgstr ""

#: ../../domain-ldap/kerberos.rst:6
msgid ""
"Kerberos is an authentication framework the purpose of which is to permit"
" secure identification in the potentially insecure connections of "
"decentralized networks. In Kerberos, all clients use a foundation of "
"mutual trust, the *Key Distribution Center* (KDC). A client authenticates"
" at this KDC and receives an authentication token, the so-called ticket "
"which can be used for authentication within the Kerberos environment (the"
" so-called Kerberos realm). The name of the Kerberos realm is configured "
"as part of the installation of the |UCSPRIMARYDN| and stored in the "
"|UCSUCRV| :envvar:`kerberos/realm`. It is not possible to change the name"
" of the Kerberos realm at a later point in time."
msgstr ""

#: ../../domain-ldap/kerberos.rst:18
msgid ""
"Tickets have a standard validity period of 8 hours; this is why it is "
"vital for a Kerberos domain to have the system time synchronized for all "
"the systems belonging to the Kerberos realm."
msgstr ""

#: ../../domain-ldap/kerberos.rst:22
msgid ""
"|UCSUCS| uses the Heimdal Kerberos implementation. An independent Heimdal"
" service is started on UCS Directory Nodes without Samba/AD, while "
"Kerberos is provided by a Heimdal version integrated in Samba on Samba/AD"
" DCs. In a environment composed of UCS Directory Nodes without Samba/AD "
"and Samba/AD domain controllers both Kerberos environments are based on "
"identical data (these are synchronized between Samba/AD and OpenLDAP via "
"the Univention S4 connector (see :ref:`windows-s4-connector`))."
msgstr ""

#: ../../domain-ldap/kerberos.rst:34
msgid "KDC selection"
msgstr ""

#: ../../domain-ldap/kerberos.rst:36
msgid ""
"As standard, the KDC is selected via a DNS service record. The KDC used "
"by a system can be reconfigured using the |UCSUCRV| "
":envvar:`kerberos/kdc`. If Samba/AD is installed on a system in the "
"domain, the service record is reconfigured so that only the Samba/AD-"
"based KDCs are offered. In a mixed environment it is recommended only to "
"use the Samba/AD KDCs."
msgstr ""

#: ../../domain-ldap/kerberos.rst:46
msgid "Kerberos admin server"
msgstr ""

#: ../../domain-ldap/kerberos.rst:48
msgid ""
"The Kerberos admin server, on which the administrative settings of the "
"domain can be made, runs on the |UCSPRIMARYDN|. Most of the settings in "
"Univention Corporate Server are taken from the LDAP directory, so that "
"the major remaining function is changing passwords. This can be achieved "
"by means of the Tool :command:`kpasswd`; the passwords are then changed "
"in the LDAP too. The Kerberos admin server can be configured on a system "
"via the |UCSUCRV| :envvar:`kerberos/adminserver`."
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:4
msgid "LDAP directory"
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:8
msgid ""
"Univention Corporate Server saves domain-wide data in a LDAP directory "
"service based on OpenLDAP. This chapter describes the advanced "
"configuration and coordination of OpenLDAP."
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:12
msgid ""
"Often several LDAP servers are operated in a UCS domain. The "
"configuration of the server(s) used is described in :ref:`computers-"
"configure-ldap-server`."
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:18
msgid "LDAP schemas"
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:20
msgid ""
"Schema definitions specify which object classes exist and which "
"attributes they include, i.e., which data can be stored in a directory "
"service. Schema definitions are saved as text files and included in the "
"OpenLDAP server's configuration file."
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:25
msgid ""
"UCS uses standard schemas where possible in order to allow "
"interoperability with other LDAP applications. Schema extensions are "
"supplied for Univention-specific attributes - such as for the policy "
"mechanism."
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:32
msgid "LDAP schema extensions"
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:34
msgid ""
"To keep the efforts required for small extensions in LDAP as low as "
"possible, |UCSUCS| provides its own LDAP scheme for customer extensions. "
"The LDAP object class ``univentionFreeAttributes`` can be used for "
"extended attributes without restrictions. It offers 20 freely usable "
"attributes (``univentionFreeAttribute1`` to "
"``univentionFreeAttribute20``) and can be used in connection with any "
"LDAP object (e.g., a user object)."
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:41
msgid ""
"If LDAP schema extensions are to be delivered as part of software "
"packages, there is also the possibility of packaging them and "
"distributing them to all the |UCSBACKUPDN| servers in the domain using a "
"|UCSUDL| module. Further information is available in `Packaging LDAP "
"Schema Extensions <univention-docs-dev-ref-ldapschema_>`_."
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:50
msgid "LDAP schema replication"
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:52
msgid ""
"The replication of the LDAP schemas is also automated via the "
"listener/notifier mechanism (see :ref:`domain-listener-notifier`). This "
"relieves the administrator of the need to perform all schema updates "
"manually on all the OpenLDAP servers in the domain. Performing the schema"
" replication before the replication of LDAP objects guarantees that this "
"doesn't fail as a result of missing object classes or attributes."
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:59
msgid ""
"On the |UCSPRIMARYDN|, a checksum for all the directories with schema "
"definitions is performed when the OpenLDAP server is started. This "
"checksum is compared with the last saved checksum in the :file:`/var/lib"
"/univention-ldap/schema/md5` file."
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:64
msgid ""
"The actual replication of the schema definitions is initiated by the "
"|UCSUDL|. Prior to every request from the |UCSUDN| for a new transaction "
"ID, its current schema ID is requested. If this is higher than the schema"
" ID on the listener side, the currently used sub-schema is procured from "
"the notifier system's LDAP server via an LDAP search."
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:70
msgid ""
"The output sub-schema is included on the listener system in LDIF format "
"in the :file:`/var/lib/univention-ldap/schema.conf` file and the local "
"OpenLDAP server restarted. If the schema replication is completed with "
"this step, the replication of the LDAP objects is continued."
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:78
msgid "Audit-proof logging of LDAP changes"
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:80
msgid ""
"The :program:`univention-directory-logger` package allows the logging of "
"all changes in the LDAP directory service. As each data record contains "
"the hash value of the previous data record, manipulations of the log file"
" - such as deleted entries - can be uncovered."
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:85
msgid ""
"Individual areas of the directory service can be excluded from the "
"logging. These branches can be configured using the |UCSUCR| variables "
":envvar:`ldap/logging/exclude1`, :envvar:`ldap/logging/excludeN`, etc. As"
" standard, the container is excluded in which the temporary objects are "
"stored (``cn=temporary,cn=univention``). The LDAP changes are logged by a"
" |UCSUDL| module. The |UCSUDL| service must be restarted if changes are "
"made to the |UCSUCR| variables."
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:93
msgid ""
"The logging is made in the :file:`/var/log/univention/directory-"
"logger.log` file in the following format:"
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:96
msgid ""
"START\n"
"Old Hash: Hash sum of the previous data record\n"
"DN: DN of the LDAP object\n"
"ID: Listener/notifier transaction ID\n"
"Modifier: DN of the modifying account\n"
"Timestamp: Time stamp in format dd.mm.yyyy hh:mm:ss\n"
"Action: add, modify or delete\n"
"\n"
"Old Values:\n"
" List of old attributes, empty when an object is added\n"
"New Values:\n"
" List of new attributes, empty when an object is deleted\n"
"END"
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:113
msgid ""
"A hash sum is calculated for each logged data record and also logged in "
"the :file:`daemon.info` section of the syslog service."
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:116
msgid ""
"As of :uv:erratum:`4.4x536` the respective transaction ID of the entry is"
" added to the file :file:`/var/log/univention/directory-logger.log` "
"before each line as a prefix:"
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:120
msgid ""
"ID 342: START\n"
"ID 342: Old Hash: 70069d51a7e2e168d7c7defd19349985\n"
"ID 342: DN: uid=Administrator,cn=users,dc=example,dc=com\n"
"ID 342: ID: 342\n"
"ID 342: Modifier: cn=admin,dc=example,dc=com\n"
"ID 342: Timestamp: 15.04.2020 09:20:40\n"
"ID 342: Action: modify\n"
"ID 342:\n"
"ID 342: Old values:\n"
"ID 342: description: Dhis is a description test\n"
"ID 342: entryCSN: 20200415091936.317108Z#000000#000#000000\n"
"ID 342: modifyTimestamp: 20200415091936Z\n"
"ID 342:\n"
"ID 342: New values:\n"
"ID 342: description: This is a description test\n"
"ID 342: entryCSN: 20200415092040.430976Z#000000#000#000000\n"
"ID 342: modifyTimestamp: 20200415092040Z\n"
"ID 342: END"
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:142
msgid ""
"If :program:`univention-directory-logger` was installed before this UCS "
"version, the old behavior (no prefix) is retained by default. By setting "
"the |UCSUCRV| :envvar:`ldap/logging/id-prefix` to ``yes`` the new "
"behavior can be activated. This prefix simplifies the correlation of "
"related lines when post-processing the sign in analysis and monitoring "
"software."
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:151
msgid "Timeout for inactive LDAP connections"
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:153
msgid ""
"The |UCSUCRV| :envvar:`ldap/idletimeout` is used to configure a time "
"period in seconds after which the LDAP connection is cut off on the "
"server side. When the value is set to ``0``, no expiry period is in use. "
"The timeout period has been set at six minutes as standard."
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:161
msgid "LDAP command line tools"
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:163
msgid ""
"In addition to the UMC web interface, there are also a range of programs "
"with which one can access the LDAP directory from the command line."
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:166
msgid ""
"The :command:`univention-ldapsearch` tool simplifies the authenticated "
"search in the LDAP directory. A search filter needs to be specified as an"
" argument; in the following example, the administrator is searched for "
"using the user ID:"
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:170
msgid "$ univention-ldapsearch uid=Administrator"
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:175
msgid ""
"The :command:`slapcat` command makes it possible to save the current LDAP"
" data in a text file in LDIF format, e.g.:"
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:178
msgid "$ slapcat > ldapdata.txt"
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:186
msgid "Access control for the LDAP directory"
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:188
msgid ""
"Access to the information contained in the LDAP directory is controlled "
"by Access Control Lists (ACLs) on the server side. The ACLs are defined "
"in the central configuration file :file:`/etc/ldap/slapd.conf` and "
"managed using |UCSUCR|."
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:193
msgid ""
"The :file:`slapd.conf` is managed using a multifile template; further ACL"
" elements can be added below "
":file:`/etc/univention/templates/files/etc/ldap/slapd.conf.d/` between "
"the :file:`60univention-ldap-server_acl-master` and :file:`70univention-"
"ldap-server_acl-master-end` files or the existing templates expanded "
"upon."
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:200
msgid ""
"If LDAP ACL extensions are to be delivered as part of software packages, "
"there is also the possibility of packaging them and distributing them to "
"all the LDAP servers in the domain using a |UCSUDL| module. Further "
"information is available in `Packaging LDAP ACL Extensions <univention-"
"docs-dev-ref-ldapacl_>`_."
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:205
msgid ""
"The default setting of the LDAP server after new installations with UCS "
"does not allow anonymous access to the LDAP directory. This behavior is "
"configured with the |UCSUCRV| :envvar:`ldap/acl/read/anonymous`. "
"Individual IP addresses can be granted anonymous read permissions via "
"|UCSUCRV| :envvar:`ldap/acl/read/ips`."
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:211
msgid ""
"Following successful authentication on the LDAP server, all attributes of"
" a user account can be read out by this user."
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:214
msgid ""
"In addition, an extra, internal account, the root DN, also has full write"
" access."
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:217
msgid ""
"In addition, UCS offers a number of further ACLs installed as standard "
"which suppress access to sensitive files (e.g., the user password) and "
"establish rules which are necessary for operation (e.g., necessary "
"accesses to computer accounts for log-ins). The read and write access to "
"this sensitive information if only intended for members of the ``Domain "
"Admins`` group."
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:224
msgid ""
"Nested groups are also supported. The |UCSUCRV| "
":envvar:`ldap/acl/nestedgroups` can be used to deactivate the nested "
"groups function for LDAP ACLs, which will result in a speed increase for "
"directory requests."
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:231
msgid "Delegation of the privilege to reset user passwords"
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:233
msgid ""
"To facilitate the delegation of the privilege to reset user passwords, "
"the :program:`univention-admingrp-user-passwordreset` package can be "
"installed. It uses a join script to create the ``User Password Admins`` "
"user group, in so far as this does not already exist."
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:238
msgid ""
"Members of this group receive the permission via additional LDAP ACLs to "
"reset the passwords of other users. These LDAP ACLs are activated "
"automatically during the package installation. To use another group, or a"
" group that already exists, instead of the ``User Password Admins`` "
"group, the DN of the group to be used can be entered in the |UCSUCRV| "
":envvar:`ldap/acl/user/passwordreset/accesslist/groups/dn`. The LDAP "
"server must be restarted after making changes."
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:246
msgid ""
"Passwords can be reset via the UMC module :guilabel:`Users`. By default "
"the module is only accessible to the ``Administrator`` user. During the "
"installation a new ``default-user-password-admins`` policy is created "
"automatically, which is linked to the members of the ``User Password "
"Admins`` group and can be assigned to a corresponding container in the "
"LDAP directory. Further information on the configuration of UMC policies "
"can be found in :ref:`delegated-administration`."
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:253
msgid ""
"The policy makes it possible to search for users and create an overview "
"of all the attributes of a user object. If an attempt is made to modify "
"further attributes in addition to the password when the user does not "
"have sufficient access rights to the LDAP directory, |UCSUDM| denies them"
" write access with the message *Permission denied*."
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:261
msgid ""
"The package should be installed on the |UCSPRIMARYDN| and the "
"|UCSBACKUPDN|\\ s. During the installation, the LDAP server is restarted "
"and is thus temporarily unavailable."
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:265
msgid ""
"Password resets via the password group can be prevented for sensitive "
"users or groups (e.g., domain administrators). The |UCSUCR| variables "
":envvar:`ldap/acl/user/passwordreset/protected/uid` and "
":envvar:`ldap/acl/user/passwordreset/protected/gid` can be used to "
"configure users and groups. Multiple values must be separated by commas. "
"After changes to the variables, it is necessary to restart the LDAP "
"server using the :command:`systemctl restart slapd` command. By default "
"the members of the ``Domain Admins`` group are protected against having "
"theirs password changed."
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:274
msgid ""
"If access to additional LDAP attributes should be necessary for changing "
"the password, the attribute names can be expanded in |UCSUCRV| "
":envvar:`ldap/acl/user/passwordreset/attributes`. After the change, the "
"LDAP directory service must be restarted for the change to take effect. "
"This variable is already set appropriately for a UCS standard "
"installation."
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:283
msgid "Name Service Switch / LDAP NSS module"
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:285
msgid ""
"With the *Name Service Switch*, the GNU C standard library "
"(:program:`glibc`) used in Univention Corporate Server offers a modular "
"interface for resolving the names of users, groups and hosts."
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:289
msgid ""
"The LDAP NSS module is used on UCS systems for access to the domain data "
"(e.g., users) as standard. The module queries the LDAP server specified "
"in the |UCSUCRV| :envvar:`ldap/server/name` (and if necessary the "
":envvar:`ldap/server/addition`)."
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:294
msgid ""
"What measures should be taken if the LDAP server cannot be reached can be"
" specified by the |UCSUCRV| :envvar:`nssldap/bindpolicy`. As standard, if"
" the server cannot be reached, a new connection attempt is made. If the "
"variable is set to ``soft``, then no new attempt is made to connect. This"
" can considerably accelerate the boot of a system if the LDAP server "
"cannot be reached, e.g., in an isolated test environment."
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:304
msgid "Syncrepl for synchronization with non-UCS OpenLDAP servers"
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:306
msgid ""
"The syncrepl replication service can also be activated parallel to the "
"notifier service for the synchronization of OpenLDAP servers not "
"installed on UCS systems. Syncrepl is a component of OpenLDAP, monitors "
"changes in the local directory service and transmits them to other "
"OpenLDAP servers."
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:315
msgid "Configuration of the directory service when using Samba/AD"
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:317
msgid ""
"As standard, the OpenLDAP server is configured in such a way that it also"
" accepts requests from ports ``7389`` and ``7636`` in addition to the "
"standard ports ``389`` and ``636``."
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:321
msgid ""
"If Samba/AD is used, the Samba/AD domain controller service occupies the "
"ports ``389`` and ``636``. In this case, OpenLDAP is automatically "
"reconfigured so that only ports ``7389`` and ``7636`` are used. This must"
" be taken into account during the configuration of syncrepl in particular"
" (see :ref:`domain-ldap-syncrepl`). :command:`univention-ldapsearch` uses"
" the standard port automatically."
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:331
msgid "Daily backup of LDAP data"
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:333
msgid ""
"The content of the LDAP directory is backed up daily on the "
"|UCSPRIMARYDN| and all |UCSBACKUPDN| systems via a Cron job. If Samba 4 "
"is used, its data directory is also backed up."
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:337
msgid ""
"The LDAP data are stored in the :file:`/var/univention-backup/` directory"
" in the naming scheme :file:`ldap-backup_DATE.ldif.gz` in LDIF format. "
"They can only be read by the ``root`` user. The Samba 4 files are stored "
"in the directory :file:`/var/univention-backup/samba/`."
msgstr ""

#: ../../domain-ldap/ldap-directory.rst:342
msgid ""
"The |UCSUCRV| :envvar:`backup/clean/max_age` can be used to define how "
"long old backup files are kept (e.g. ``backup/clean/max_age=365``, all "
"files older than ``365`` days are automatically deleted). For new "
"installations (from UCS 4.4-7 on) the default for this variable is "
"``365`` (days). If the variable is not set, no backup files are deleted."
msgstr ""

#: ../../domain-ldap/listener-notifier.rst:4
msgid "Listener/notifier domain replication"
msgstr ""

#: ../../domain-ldap/listener-notifier.rst:11
msgid "Listener/notifier replication workflow"
msgstr ""

#: ../../domain-ldap/listener-notifier.rst:13
msgid ""
"Replication of the directory data within a UCS domain occurs via the "
"|UCSUDL|/Notifier mechanism:"
msgstr ""

#: ../../domain-ldap/listener-notifier.rst:16
msgid "The |UCSUDL| service runs on all UCS systems."
msgstr ""

#: ../../domain-ldap/listener-notifier.rst:18
msgid ""
"On the |UCSPRIMARYDN| (and possibly existing |UCSBACKUPDN| systems) the "
"|UCSUDN| service monitors changes in the LDAP directory and makes the "
"selected changes available to the |UCSUDL| services on the other UCS "
"systems."
msgstr ""

#: ../../domain-ldap/listener-notifier.rst:27
msgid "Listener/Notifier mechanism"
msgstr ""

#: ../../domain-ldap/listener-notifier.rst:29
msgid ""
"The active |UCSUDL| instances in the domain connect to a |UCSUDN| "
"service. If an LDAP change is performed on the |UCSPRIMARYDN| (all other "
"LDAP servers in the domain are read-only), this is registered by the "
"|UCSUDN| and notified to the listener instances."
msgstr ""

#: ../../domain-ldap/listener-notifier.rst:34
msgid ""
"Each |UCSUDL| instance uses a range of |UCSUDL| modules. These modules "
"are shipped by the installed applications; the print server package "
"includes, for example, listener modules which generate the CUPS "
"configuration."
msgstr ""

#: ../../domain-ldap/listener-notifier.rst:38
msgid ""
"|UCSUDL| modules can be used to communicate domain changes to services "
"which are not LDAP-compatible. The print server CUPS is an example of "
"this: The printer definitions are not read from the LDAP, but instead "
"from the :file:`/etc/cups/printers.conf` file. Now, if a printer is saved"
" in the UMC printer management, it is stored in the LDAP directory. This "
"change is detected by the |UCSUDL| module *cups-printers* and an entry "
"added to, modified or deleted in :file:`/etc/cups/printers.conf` based on"
" the data in the LDAP."
msgstr ""

#: ../../domain-ldap/listener-notifier.rst:46
msgid ""
"Additional information on the setup of |UCSUDL| modules and developing "
"your own modules can be found in :cite:t:`developer-reference`."
msgstr ""

#: ../../domain-ldap/listener-notifier.rst:49
msgid ""
"LDAP replication is also performed by a listener module. If the LDAP "
"server to be replicated to is not accessible, the LDAP changes are "
"temporarily stored in the :file:`/var/lib/univention-directory-"
"replication/failed.ldif` file. The contents of the file are automatically"
" transferred to the LDAP when the LDAP server is available again."
msgstr ""

#: ../../domain-ldap/listener-notifier.rst:55
msgid ""
"The listener/notifier mechanism works based on transactions. A "
"transaction ID is increased for every change in the LDAP directory of the"
" |UCSPRIMARYDN|. A |UCSUDL| instance which has missed several "
"transactions - for example, because the computer was switched off - "
"automatically requests all the missing transactions once the connection "
"is available again until its local transaction ID corresponds to that of "
"the |UCSPRIMARYDN|."
msgstr ""

#: ../../domain-ldap/listener-notifier.rst:65
msgid "Analysis of listener/notifier problems"
msgstr ""

#: ../../domain-ldap/listener-notifier.rst:70
msgid "Log files/debug level of replication"
msgstr ""

#: ../../domain-ldap/listener-notifier.rst:72
msgid ""
"All status messages from the |UCSUDL| and the executed listener modules "
"are logged in the :file:`/var/log/univention/listener.log` file. The "
"level of detail of the log messages can be configured using the |UCSUCRV|"
" :envvar:`listener/debug/level`."
msgstr ""

#: ../../domain-ldap/listener-notifier.rst:78
msgid ""
"Status messages from the |UCSUDN| service are logged in the "
":file:`/var/log/univention/notifier.log` file. The debug level can be "
"configured using the :envvar:`notifier/debug/level`."
msgstr ""

#: ../../domain-ldap/listener-notifier.rst:85
msgid "Identification of replication problems"
msgstr ""

#: ../../domain-ldap/listener-notifier.rst:87
msgid ""
"When the domain replication is running normally (normal system load, no "
"network problems), the delay between changes being made in UMC modules "
"and these changes being replicated to, for example, a |UCSREPLICADN| is "
"barely noticeable. An incomplete replication can be identified by "
"comparing the transaction IDs of the listener and notifier services."
msgstr ""

#: ../../domain-ldap/listener-notifier.rst:93
msgid ""
"The transactions registered by the notifier service are written in the "
":file:`/var/lib/univention-ldap/notify/transaction` file in ascending "
"order on the |UCSPRIMARYDN|. An example:"
msgstr ""

#: ../../domain-ldap/listener-notifier.rst:97
msgid ""
"root@primary:~# tail -1 /var/lib/univention-ldap/notify/transaction\n"
"836 cn=replica3,cn=dc,cn=computers,dc=firma,dc=de m"
msgstr ""

#: ../../domain-ldap/listener-notifier.rst:103
msgid ""
"The last transaction received by the listener system is stored in the "
":file:`/var/lib/univention-directory-listener/notifier_id` file:"
msgstr ""

#: ../../domain-ldap/listener-notifier.rst:106
msgid ""
"root@replica1:~# cat /var/lib/univention-directory-listener/notifier_id\n"
"836"
msgstr ""

#: ../../domain-ldap/listener-notifier.rst:112
msgid ""
"This check can also be performed automatically by the Nagios service "
"``UNIVENTION_REPLICATION`` (see :ref:`nagios-preconfigured-checks`)."
msgstr ""

#: ../../domain-ldap/listener-notifier.rst:118
msgid "Reinitialization of listener modules"
msgstr ""

#: ../../domain-ldap/listener-notifier.rst:120
msgid ""
"If there are problems in running a listener module, there is the option "
"to reinitialize the module. In this case, all LDAP objects with which the"
" listener module works are passed on again."
msgstr ""

#: ../../domain-ldap/listener-notifier.rst:124
msgid ""
"The name of the listener module must be supplied to the command for the "
"renewed initialization. The installed listener modules can be found in "
"the :file:`/var/lib/univention-directory-listener/handlers/` directory."
msgstr ""

#: ../../domain-ldap/listener-notifier.rst:128
msgid ""
"The following command can be used to reinitialize the printer module, for"
" example:"
msgstr ""

#: ../../domain-ldap/listener-notifier.rst:131
msgid "$ univention-directory-listener-ctrl resync cups-printers"
msgstr ""

#: ../../domain-ldap/oidc.rst:4
msgid "OpenID Connect Provider"
msgstr ""

#: ../../domain-ldap/oidc.rst:8
msgid ""
"UCS offers the possibility to install a :program:`OpenID Connect "
"Provider`, which allows external web services to delegate the user login "
"via the *OpenID Connect* (OIDC) protocol to the UCS Identity Management. "
"The :program:`OpenID Connect Provider` App can be installed via the App "
"Center. The service is provided by the software :program:`Kopano "
"Konnect`."
msgstr ""

#: ../../domain-ldap/oidc.rst:14
msgid ""
"The app can be installed on all system roles. When installing on a UCS "
"system with the role |UCSPRIMARYDN| or |UCSBACKUPDN| the :program:`OpenID"
" Connect Provider` is made available under the DNS entry for the single "
"sign-on, normally this is :samp:`ucs-sso.{Domain name}`."
msgstr ""

#: ../../domain-ldap/oidc.rst:19
msgid ""
"If the app is installed on a different system role, the provider can be "
"reached directly via the hostname instead. It should be ensured that the "
"app is installed on all other servers that are reachable at the ``ucs-"
"sso`` DNS CNAME."
msgstr ""

#: ../../domain-ldap/oidc.rst:23
msgid ""
"Session synchronization between multiple installed OIDC Providers in a "
"domain is not preconfigured. When experiencing login issues with Apps, we"
" recommend to only install the OIDC Provider on one system, and restrict "
"the ``ucs-sso`` DNS CNAME to that system, or contact Univention Support."
msgstr ""

#: ../../domain-ldap/oidc.rst:28
msgid ""
"External Web services can be connected to UCS via :program:`OpenID "
"Connect` by creating a specific object of type ``oidc/rpservice`` for "
"this service in the UCS directory service. These can be created via the "
"UMC module :guilabel:`LDAP directory` in the container ``cn=oidc``, which"
" is located below the container ``cn=univention``. Here the new service "
"can be registered via the item Add and the selection :guilabel:`OpenID "
"Connect Relying Party Service`."
msgstr ""

#: ../../domain-ldap/oidc.rst:35
msgid "The same is also possible from the command line:"
msgstr ""

#: ../../domain-ldap/oidc.rst:37
msgid ""
"$ udm oidc/rpservice create --set name=$UCS_internal_identifier \\\n"
"> --position=\"cn=oidc,cn=univention,$(ucr get ldap/base)\" \\\n"
"> --set clientid=$ClientID \\\n"
"> --set clientsecret=$a_long_password \\\n"
"> --set trusted=yes \\\n"
"> --set applicationtype=web \\\n"
"> --set redirectURI=$URL_from_services_documentation"
msgstr ""

#: ../../domain-ldap/oidc.rst:47
msgid "The command parameters are:"
msgstr ""

#: ../../domain-ldap/oidc.rst:50
msgid "``name``"
msgstr ""

#: ../../domain-ldap/oidc.rst:50
msgid "the service name displayed in the web interface during login."
msgstr ""

#: ../../domain-ldap/oidc.rst:54
msgid "``clientid``"
msgstr ""

#: ../../domain-ldap/oidc.rst:53 ../../domain-ldap/oidc.rst:57
msgid "must be identical here and in the connected service (*shared secret*)."
msgstr ""

#: ../../domain-ldap/oidc.rst:58
msgid "``secret``"
msgstr ""

#: ../../domain-ldap/oidc.rst:63
msgid "``trusted``"
msgstr ""

#: ../../domain-ldap/oidc.rst:61
msgid ""
"should be set to ``yes`` by default. Otherwise, the user will be prompted"
" for confirmation to transfer their user attributes to the service."
msgstr ""

#: ../../domain-ldap/oidc.rst:66
msgid "``applicationtype``"
msgstr ""

#: ../../domain-ldap/oidc.rst:66
msgid "should be set to ``web`` for internet services."
msgstr ""

#: ../../domain-ldap/oidc.rst:74
msgid "``redirectURI``"
msgstr ""

#: ../../domain-ldap/oidc.rst:69
msgid ""
"URL of the login endpoint, which can be found in the documentation of the"
" connected service. If a service is accessible via several URLs or should"
" it also be accessible via IP address, all possible addresses must be "
"added to the ``redirectURI`` attribute. The field can therefore be "
"defined multiple times, whereby each individual value must contain a "
"valid URL."
msgstr ""

#: ../../domain-ldap/oidc.rst:76
msgid ""
"The connected web service still needs information about the "
":program:`OpenID Connect` endpoints of the provider app for its "
"configuration. If the provider app is installed, this information can be "
"found at the URL :samp:`https://ucs-sso{[Domain name]}/.well-known"
"/openid-configuration`. If the provider app was installed on a system "
"other than |UCSPRIMARYDN| or |UCSBACKUPDN|, use the FQDN of the "
"respective server instead of :samp:`ucs-sso.{Domain name}` as described "
"above."
msgstr ""

#: ../../domain-ldap/oidc.rst:84
msgid ""
"When using :program:`OpenID Connect`, resolvable DNS names and verifiable"
" certificates are a prerequisite. This is especially true for client "
"computers of end users who need to access both the DNS resolvable host "
"names of the Web service and the :program:`OpenID Connect Provider`. In "
"addition, the externally connected Web services must be able to establish"
" a connection to the :program:`OpenID Connect Provider` in order to be "
"able to retrieve the user attributes."
msgstr ""

#: ../../domain-ldap/oidc.rst:92
msgid ""
"In the special case where the DNS name of the OIDC provider is to be "
"changed, the corresponding value must first be adjusted in the app "
"settings of the :program:`OpenID Connect Provider` App. Since there are "
"diverse scenarios for the availability of the provider after changing the"
" DNS name, the web server configuration cannot be changed automatically. "
"For example, depending on the configured DNS name, the UCS Apache "
"configuration has to be adapted. The configuration file "
":file:`/etc/apache2/conf-available/openid-connect-provider.conf` must be "
"made available under the set DNS name in a virtual host."
msgstr ""

#: ../../domain-ldap/oidc.rst:102
msgid ""
"With version 2 of the :program:`OIDC-Provider App` the authentication to "
":program:`OpenID Connect` works via the SAML Identity Provider of the UCS"
" domain. If the SAML Identity Provider is not reachable at the default "
"URL :samp:`https://ucs-sso.{[Domain name]}`, the correct URL under which "
"the SAML IdP metadata for the UCS domain can be retrieved must be entered"
" correctly in the app settings. If this URL is configured incorrectly, "
"the :program:`OpenID Connect Provider` will not start."
msgstr ""

#: ../../domain-ldap/oidc.rst:110
msgid ""
"With SAML authentication, the authorization for the use of the "
":program:`OpenID Connect Provider` and thus for all apps connected via "
"OIDC can be controlled via SAML authorizations. By default, the group "
"``Domain Users`` is enabled for access when the app is installed. If this"
" permission should be removed, the corresponding option must also be "
"activated in the app settings so that the permission is not automatically"
" added again."
msgstr ""

#: ../../domain-ldap/oidc.rst:117
msgid ""
"The :program:`OpenID Connect Provider` logs actions via the Docker "
"Daemon. The output can be viewed with the command :command:`univention-"
"app logs openid-connect-provider`."
msgstr ""

#: ../../domain-ldap/password-hashes.rst:4
msgid "Password hashes in the directory service"
msgstr ""

#: ../../domain-ldap/password-hashes.rst:6
msgid ""
"User password hashes are stored in the directory service in the "
"``userPassword`` attribute. The :program:`crypt` library function is used"
" to hash passwords. The actual hashing method can be configured via the "
"|UCSUCRV| :envvar:`password/hashing/method`, ``SHA-512`` is used by "
"default."
msgstr ""

#: ../../domain-ldap/password-hashes.rst:11
msgid ""
"As an alternative |UCSUCS| (from version :uv:erratum:`4.4x888` on) offers"
" the option of using :program:`bcrypt` as hashing method for passwords of"
" user accounts. To activate :program:`bcrypt` support in OpenLDAP the "
"|UCSUCRV| :envvar:`ldap/pw-bcrypt` has to bet set to ``true`` on all LDAP"
" servers. Otherwise it is not possible authenticate with a "
":program:`bcrypt` hash as password hash. Additionally the |UCSUCRV| "
":envvar:`password/hashing/bcrypt` has to be set to ``true``, again on all"
" servers, to activate :program:`bcrypt` as the hashing method for setting"
" or changing user password."
msgstr ""

#: ../../domain-ldap/password-hashes.rst:20
msgid ""
"In addition, the :program:`bcrypt` cost factor and the :program:`bcrypt` "
"variant can be configured via the |UCSUCRV|\\ s "
":envvar:`password/hashing/bcrypt/cost_factor` (default ``12``) and "
":envvar:`password/hashing/bcrypt/prefix` (default ``2b``)."
msgstr ""

#: ../../domain-ldap/password-hashes.rst:27
msgid ""
":program:`bcrypt` is limited to a maximum of 72 characters. So only the "
"first 72 characters of the password are used to generate the hashes."
msgstr ""

#: ../../domain-ldap/saml.rst:4
msgid "SAML identity provider"
msgstr ""

#: ../../domain-ldap/saml.rst:6
msgid ""
"SAML (Security Assertion Markup Language) is an XML-based standard for "
"exchanging authentication information in order to allow single sign-on "
"across domain boundaries. UCS provides a fail-safe SAML identity provider"
" on a |UCSPRIMARYDN| as well as |UCSBACKUPDN|. The SAML identity provider"
" is registered at an external service with a cryptographic certificate "
"and establishes a trust relationship. The user then only needs to "
"authenticate himself against UCS and can use the service without renewed "
"authentication."
msgstr ""

#: ../../domain-ldap/saml.rst:19
msgid "The single sign-on login page"
msgstr ""

#: ../../domain-ldap/saml.rst:21
msgid ""
"The SAML 2.0 compatible UCS identity provider is provided by the "
"integration of :program:`simplesamlphp`."
msgstr ""

#: ../../domain-ldap/saml.rst:24
msgid ""
"The UCS identity provider is tightly integrated into the UCS domain. "
"Clients that will be used to access the UCS identity provider have to be "
"able to resolve DNS records in the UCS domain. The domain DNS Servers "
"should therefore be configured on all clients in order to be able to "
"resolve the central DNS record, which by default is :samp:`ucs-"
"sso.{[Domain name]}`."
msgstr ""

#: ../../domain-ldap/saml.rst:31
msgid ""
"The UCS identity provider is automatically installed on |UCSPRIMARYDN| "
"and |UCSBACKUPDN|\\ s. Further |UCSBACKUPDN|\\ s can be made available in"
" the domain to increase fail-safe safety. The default DNS record :samp"
":`ucs-sso.{[Domain name]}` is registered to increase fail-safe access to "
"the UCS identity provider. The SSL certificate for this record is kept on"
" all participating systems in the domain. It is advised to install the "
"UCS domain root certificate on all clients that are using *single sign-"
"on*."
msgstr ""

#: ../../domain-ldap/saml.rst:39
msgid ""
"It is possible to associate the SAML authentication with the Kerberos "
"login. This means that users with a valid Kerberos ticket, for example "
"after logging on to Windows or Linux, can sign in to the identity "
"provider without having to manual re-authenticate."
msgstr ""

#: ../../domain-ldap/saml.rst:44
msgid ""
"To allow Kerberos authentication at the identity provider, the |UCSUCRV| "
":envvar:`saml/idp/authsource` has to be changed from ``univention-ldap`` "
"to ``univention-negotiate``. The web browsers must be configured to "
"transfer the Kerberos ticket to the SAML Identity Provider. Here are two "
"examples for the configuration of Firefox and Internet Explorer / "
"Microsoft Edge:"
msgstr ""

#: ../../domain-ldap/saml.rst:55
msgid "Mozilla Firefox"
msgstr ""

#: ../../domain-ldap/saml.rst:51
msgid ""
"In the extended Firefox configuration, which can be reached by entering "
"``about:config`` in the Firefox address line, the address of the identity"
" provider must be entered in the option ``network.negotiate-auth.trusted-"
"uris``, which is :samp:`ucs-sso.{[Domain name]}` by default."
msgstr ""

#: ../../domain-ldap/saml.rst:61
msgid "Microsoft Internet Explorer; Microsoft Edge"
msgstr ""

#: ../../domain-ldap/saml.rst:58
msgid ""
"In the Control Panel, the :guilabel:`Internet Options` must be opened, "
"followed by :menuselection:`Security --> Local Intranet --> Sites --> "
"Advanced`. The address of the identity provider has to be added, which is"
" :samp:`ucs-sso.{[Domain name]}` by default."
msgstr ""

#: ../../domain-ldap/saml.rst:63
msgid ""
"The Kerberos authentication can be restricted to certain IP subnets by "
"setting the |UCSUCRV| :envvar:`saml/idp/negotiate/filter-subnets` for "
"example to ``127.0.0.0/16,192.168.0.0/16``. This is especially useful to "
"prevent a pop up login box being shown for clients which are not part of "
"the UCS domain."
msgstr ""

#: ../../domain-ldap/saml.rst:71
msgid "Login via *single sign-on*"
msgstr ""

#: ../../domain-ldap/saml.rst:73
msgid ""
"The *single sign-on* is the default login for |UCSWEB|\\ s, as long as "
":samp:`ucs-sso.[Domain name]}` can be reached. To login the domain "
"credentials must be provided. For the login directly at the UCS system "
"(i.e., without *single sign-on*), follow the link :guilabel:`Login "
"without Single Sign On`."
msgstr ""

#: ../../domain-ldap/saml.rst:78
msgid ""
"The design of the login dialog can be changed by editing "
":file:`/usr/share/univention-management-console-login/css/custom.css`. "
"This file will never be altered or deleted during updates."
msgstr ""

#: ../../domain-ldap/saml.rst:82
msgid ""
"Other web services will redirect to the UCS identity provider login page "
"in a similar fashion in order to carry out a *single sign-on*. After "
"authenticating, the user will be forwarded back to the web service "
"itself. These services need to be registered as described in :ref"
":`domain-saml-additional-serviceprovider`."
msgstr ""

#: ../../domain-ldap/saml.rst:87
msgid ""
"The *single sign-on* for a particular service can be initiated from the "
"UCS identity provider, as well. This saves an extra visit at the external"
" web service which redirects to the authentication site. To do so, a link"
" to the UCS identity provider page needs to be provided in the form of "
":samp:`https://ucs-sso.{[Domain "
"name]}/simplesamlphp/saml2/idp/SSOService.php?spentityid={[Service "
"provider identifier]}`."
msgstr ""

#: ../../domain-ldap/saml.rst:97
msgid "Adding a new external service provider"
msgstr ""

#: ../../domain-ldap/saml.rst:99
msgid ""
"The UMC module :guilabel:`SAML identity provider` allows to manage all "
"service providers that are registered at the UCS identity provider. Users"
" have to be activated for a service provider, to be able to authenticate "
"for it at the UCS identity provider. The service provider can be "
"activated for groups, to allow authentication with that service provider "
"for all users within that group. On the users :guilabel:`Account tab` or "
"the groups :guilabel:`General tab`, the service provider can to be added "
"under :guilabel:`SAML settings`."
msgstr ""

#: ../../domain-ldap/saml.rst:107
msgid ""
"To register the UCS identity provider at an external service provider, "
"the public part of the SAML certificate is required by the service "
"provider. The certificate can be downloaded via a link in the UMC module."
" Some service providers may require the UCS identity provider XML "
"metadata as a file upload. By default the XML file can be downloaded from"
" the URL :samp:`https://ucs-sso.{[Domain "
"name]}/simplesamlphp/saml2/idp/metadata.php`."
msgstr ""

#: ../../domain-ldap/saml.rst:115
msgid ""
"The following attributes can be configured when adding a new service "
"provider."
msgstr ""

#: ../../domain-ldap/saml.rst:117
msgid "General options when configuring a service provider"
msgstr ""

#: ../../domain-ldap/saml.rst:120 ../../domain-ldap/saml.rst:165
msgid "Attribute"
msgstr ""

#: ../../domain-ldap/saml.rst:121 ../../domain-ldap/saml.rst:166
msgid "Description"
msgstr ""

#: ../../domain-ldap/saml.rst:123
msgid "Service provider activation status"
msgstr ""

#: ../../domain-ldap/saml.rst:124
msgid ""
"If activated, the configuration for the service provider is activated and"
" is ready for authentication."
msgstr ""

#: ../../domain-ldap/saml.rst:127
msgid "Service provider identifier"
msgstr ""

#: ../../domain-ldap/saml.rst:128
msgid ""
"Defines the internal name of the service provider. The name is later "
"selected at user objects, when giving them access to a service provider. "
"The identifier cannot be changed later."
msgstr ""

#: ../../domain-ldap/saml.rst:132
msgid "Respond to this service provider URL after login"
msgstr ""

#: ../../domain-ldap/saml.rst:133
msgid ""
"After successful authentication, the user’s browser is redirected to the "
"service provider. The redirection is done to this provided URL."
msgstr ""

#: ../../domain-ldap/saml.rst:136
msgid "Single logout URL for service provider"
msgstr ""

#: ../../domain-ldap/saml.rst:137
msgid ""
"Service providers can offer a URL endpoint at which the session at the "
"service provider can be terminated. If a user logs out at the UCS "
"identity provider, the browser will get redirected to the provided URL to"
" terminate the session."
msgstr ""

#: ../../domain-ldap/saml.rst:142
msgid "Format of ``NameID`` attribute"
msgstr ""

#: ../../domain-ldap/saml.rst:143
msgid ""
"The value ``NameIDFormat`` that the service provider receives. The "
"service provider’s documentation should contain information about "
"possible values. Example: ``urn:oasis:names:tc:SAML:2.0:nameid-"
"format:transient`` or ``urn:oasis:names:tc:SAML:1.1:nameid-"
"format:unspecified``."
msgstr ""

#: ../../domain-ldap/saml.rst:148
msgid "Name of the attribute that is used as ``NameID``"
msgstr ""

#: ../../domain-ldap/saml.rst:149
msgid ""
"The LDAP attribute that is used to uniquely identify the user is provided"
" here, e.g., ``uid``."
msgstr ""

#: ../../domain-ldap/saml.rst:152
msgid "Name of the organization for service provider"
msgstr ""

#: ../../domain-ldap/saml.rst:153
msgid ""
"The value provided here will be shown on the UCS single sign-on login "
"page. It helps the user to identify for which service they enter "
"credentials."
msgstr ""

#: ../../domain-ldap/saml.rst:157
msgid "Description of this service provider"
msgstr ""

#: ../../domain-ldap/saml.rst:158
msgid ""
"The value provided here will be shown on the UCS single sign-on login "
"page. A longer description about the service provider can be given here. "
"The description will be shown on the login page in a separate paragraph."
msgstr ""

#: ../../domain-ldap/saml.rst:162
msgid "Advanced settings when configuring a service provider"
msgstr ""

#: ../../domain-ldap/saml.rst:168
msgid "URL to the service provider’s privacy policy"
msgstr ""

#: ../../domain-ldap/saml.rst:169
msgid ""
"If a URL is entered here, the UCS identity provider login page will "
"contain a link to this URL."
msgstr ""

#: ../../domain-ldap/saml.rst:172
msgid "Allow transmission of LDAP attributes to the service provider"
msgstr ""

#: ../../domain-ldap/saml.rst:173
msgid ""
"By default, the UCS identity provider transmits only the ``NameID`` "
"attribute entered on the :guilabel:`General` page to the service "
"provider. If additional LDAP user attributes are required by the service "
"provider, this checkbox can be activated. The attributes that should be "
"transmitted have to be entered in the :guilabel:`List of LDAP attributes "
"to transmit`."
msgstr ""

#: ../../domain-ldap/saml.rst:180
msgid "Value for ``attribute format`` field"
msgstr ""

#: ../../domain-ldap/saml.rst:181
msgid ""
"In case the transmitted attributes need to be sent in a particular format"
" value, this format can be entered here. Example: ``urn:oasis:names "
":tc:SAML:2.0:nameid-format:transient`` or ``urn:oasis:names:tc:SAML:1.1"
":nameid-format:unspecified``."
msgstr ""

#: ../../domain-ldap/saml.rst:186
msgid "List of LDAP attributes to transmit"
msgstr ""

#: ../../domain-ldap/saml.rst:187
msgid ""
"Every LDAP attribute that should be transmitted to the service provider "
"can be entered here. Additionally, one or more service attribute names "
"can be added to each LDAP attribute in the field next to it. These "
"service attribute names have the purpose to translate the LDAP Attribute "
"names for the service provider. Multiple service attribute names have to "
"be separated by commas. In order for the UCS identity provider to process"
" these attributes, they need to be registered additionally via the LDAP "
"object ``id=default-saml-idp,cn=univention,[LDAP base DN]``. LDAP "
"attributes entered at the object can be read and transferred by the "
"Identity Provider."
msgstr ""

#: ../../domain-ldap/saml.rst:201
msgid "Extended Configuration"
msgstr ""

#: ../../domain-ldap/saml.rst:203
msgid ""
"Some environments may require the UCS Identity Provider to provide "
"multiple logical Identity Provider instances. Logical separation is "
"achieved by offering different URIs as Identity Provider endpoints."
msgstr ""

#: ../../domain-ldap/saml.rst:207
msgid ""
"The default endpoint is :samp:`https://ucs-sso.{[Domain "
"name]}/simplesamlphp/saml2/idp/metadata.php``. Further entries can be "
"created by setting |UCSUCRV|\\ s in the form "
":envvar:`saml/idp/entityID/supplement/[identifier]` to ``true`` on all "
"servers which serve the UCS Identity Provider. Typically that will be the"
" |UCSPRIMARYDN| and all |UCSBACKUPDN|\\ s. The :program:`apache2` service"
" must then be reloaded."
msgstr ""

#: ../../domain-ldap/saml.rst:214
msgid ""
"For example, to set up another entry under the URI :samp:`https://ucs-"
"sso.{[Domain name]}/simplesamlphp/{[secondIDP]}/saml2/idp/metadata.php``,"
" the |UCSUCRV| ``saml/idp/entityID/supplement/secondIDP=true`` must be "
"set."
msgstr ""

#: ../../domain-ldap/ssl.rst:4
msgid "SSL certificate management"
msgstr ""

#: ../../domain-ldap/ssl.rst:6
msgid ""
"In UCS, sensitive data are always sent across the network encrypted, "
"e.g., via the use of SSH for the login to systems or via the use of "
"protocols based on SSL/TLS. (*Transport Layer Security (TLS)* is the "
"current protocol name, the name of the previous protocol *Secure Socket "
"Layer (SSL)*, however, is still more common and is also used in this "
"documentation)."
msgstr ""

#: ../../domain-ldap/ssl.rst:12
msgid ""
"For example, SSL/TLS is employed in the listener/notifier domain "
"replication or for HTTPS access to |UCSWEB|\\ s."
msgstr ""

#: ../../domain-ldap/ssl.rst:15
msgid ""
"Both communication partners must be able to verify the authenticity of "
"the key used for encrypted communication between two computers. To this "
"end, each computer also features a so-called *host certificate*, which is"
" issued and signed by a certification authority (CA)."
msgstr ""

#: ../../domain-ldap/ssl.rst:20
msgid ""
"UCS provides its own CA, which is automatically set up during "
"installation of the |UCSPRIMARYDN| and from which every UCS system "
"automatically procures a certificate for itself and the CA's public "
"certificate when joining the domain. This CA appears as the root CA, "
"signs its own certificate and can sign certificates for other "
"certification authorities."
msgstr ""

#: ../../domain-ldap/ssl.rst:26
msgid ""
"The properties of the CA are generated automatically during the "
"installation based on system settings such as the locale. These settings "
"can be subsequently adapted on the |UCSPRIMARYDN| in the UMC module "
":guilabel:`Certificate settings`."
msgstr ""

#: ../../domain-ldap/ssl.rst:33
msgid ""
"If the UCS domain contains more than one system, all other host "
"certificates need to be reissued after changing the root certificate! The"
" procedure required for this is documented in :uv:kb:`Renewing the SSL "
"certificates <37>`."
msgstr ""

#: ../../domain-ldap/ssl.rst:37
msgid ""
"The UCS-CA is always found on the |UCSPRIMARYDN|. A copy of the CA is "
"stored on every |UCSBACKUPDN|, which is synchronized with the CA on the "
"|UCSPRIMARYDN| by a Cron job every 20 minutes."
msgstr ""

#: ../../domain-ldap/ssl.rst:43
msgid ""
"The CA is synchronized from the |UCSPRIMARYDN| to the |UCSBACKUPDN| and "
"not vice-versa. For this reason, only the CA on the |UCSPRIMARYDN| should"
" be used."
msgstr ""

#: ../../domain-ldap/ssl.rst:47
msgid ""
"If a |UCSBACKUPDN| is promoted to the |UCSPRIMARYDN| (see :ref:`domain-"
"backup2master`), the CA on the new |UCSPRIMARYDN| can be used directly."
msgstr ""

#: ../../domain-ldap/ssl.rst:51
msgid ""
"The UCS root certificate has a specified validity period - as do the "
"computer certificates created with it."
msgstr ""

#: ../../domain-ldap/ssl.rst:56
msgid ""
"Once this period of time elapses, services which encrypt their "
"communication with SSL (e.g., LDAP or domain replication) no longer "
"function."
msgstr ""

#: ../../domain-ldap/ssl.rst:60
msgid ""
"It is thus necessary to verify the validity of the certificate regularly "
"and to renew the root certificate in time. A Nagios plugin is provided "
"for the monitoring of the validity period. In addition, a warning is "
"shown when opening a UMC module if the root certificate is going to "
"expire soon (the warning period can be specified with the |UCSUCRV| "
":envvar:`ssl/validity/warning`; the standard value is 30 days)."
msgstr ""

#: ../../domain-ldap/ssl.rst:67
msgid ""
"The renewal of the root certificate and the other host certificates is "
"documented in :uv:kb:`Renewing the SSL certificates <37>`."
msgstr ""

#: ../../domain-ldap/ssl.rst:70
msgid ""
"On UCS systems, a Cron job verifies the validity of the local computer "
"certificate and the root certificate daily and records the expiry date in"
" the |UCSUCR| variables :envvar:`ssl/validity/host` (host certificate) "
"and :envvar:`ssl/validity/root` (root certificate). The values entered "
"there reflect the number of days since the 1970-01-01."
msgstr ""

#: ../../domain-ldap/ssl.rst:76
msgid ""
"In |UCSUMC|, the effective expiry date of the computer and root "
"certificate can be accessed via the upper right menu and the entry "
":menuselection:`License --> License information`."
msgstr ""

#: ../../domain-ldap/system-roles.rst:4
msgid "UCS system roles"
msgstr ""

#: ../../domain-ldap/system-roles.rst:6
msgid ""
"In a UCS domain systems can be installed in different *system roles*. The"
" following gives a short characterization of the different systems:"
msgstr ""

#: ../../domain-ldap/system-roles.rst:12
msgid "|UCSPRIMARYDN|"
msgstr ""

#: ../../domain-ldap/system-roles.rst:14
msgid ""
"A system with the |UCSPRIMARYDN| role is the primary domain controller of"
" a UCS domain and is always installed as the first system. The domain "
"data (such as users, groups, printers) and the SSL security certificates "
"are saved on the |UCSPRIMARYDN|."
msgstr ""

#: ../../domain-ldap/system-roles.rst:19
msgid ""
"Copies of these data are automatically transferred to all servers with "
"the |UCSBACKUPDN| role."
msgstr ""

#: ../../domain-ldap/system-roles.rst:25
msgid "|UCSBACKUPDN|"
msgstr ""

#: ../../domain-ldap/system-roles.rst:27
msgid ""
"All the domain data and SSL security certificates are saved as read-only "
"copies on servers with the |UCSBACKUPDN| role."
msgstr ""

#: ../../domain-ldap/system-roles.rst:30
msgid ""
"The |UCSBACKUPDN| is the fallback system for the |UCSPRIMARYDN|. If the "
"latter should fail, a |UCSBACKUPDN| can take over the role of the "
"|UCSPRIMARYDN| permanently (see :ref:`domain-backup2master`)."
msgstr ""

#: ../../domain-ldap/system-roles.rst:37
msgid "|UCSREPLICADN|"
msgstr ""

#: ../../domain-ldap/system-roles.rst:39
msgid ""
"All the domain data are saved as read-only copies on servers with the "
"|UCSREPLICADN| role. In contrast to the |UCSBACKUPDN|, however, not all "
"security certificates are synchronized."
msgstr ""

#: ../../domain-ldap/system-roles.rst:43
msgid ""
"As access to the services running on a |UCSREPLICADN| are performed "
"against the local LDAP server, |UCSREPLICADN|\\ s are ideal for site "
"servers and the distribution of load-intensive services."
msgstr ""

#: ../../domain-ldap/system-roles.rst:47
msgid "A |UCSREPLICADN| cannot be promoted to a |UCSPRIMARYDN|"
msgstr ""

#: ../../domain-ldap/system-roles.rst:52
msgid "|UCSMANAGEDNODE|"
msgstr ""

#: ../../domain-ldap/system-roles.rst:54
msgid ""
"|UCSMANAGEDNODE| are server systems without a local LDAP server. Access "
"to domain data here is performed via other servers in the domain."
msgstr ""

#: ../../domain-ldap/system-roles.rst:60
msgid "Ubuntu"
msgstr ""

#: ../../domain-ldap/system-roles.rst:62
msgid ""
"Ubuntu clients can be managed with this system role, see :ref:`computers-"
"ubuntu`."
msgstr ""

#: ../../domain-ldap/system-roles.rst:68
msgid "Linux"
msgstr ""

#: ../../domain-ldap/system-roles.rst:70
msgid ""
"This system role is used for the integration of other Linux systems than "
"UCS and Ubuntu, e.g., for Debian or CentOS systems. The integration is "
"documented in :cite:t:`ext-doc-domain`."
msgstr ""

#: ../../domain-ldap/system-roles.rst:77
msgid "macOS"
msgstr ""

#: ../../domain-ldap/system-roles.rst:79
msgid ""
"macOS systems can be joined into a UCS domain using Samba/AD. Additional "
"information can be found in :ref:`macos-domain-join`."
msgstr ""

#: ../../domain-ldap/system-roles.rst:85
msgid "Domain Trust Account"
msgstr ""

#: ../../domain-ldap/system-roles.rst:87
msgid ""
"A domain trust account is set up for trust relationships between Windows "
"and UCS domains."
msgstr ""

#: ../../domain-ldap/system-roles.rst:93
msgid "IP client"
msgstr ""

#: ../../domain-ldap/system-roles.rst:95
msgid ""
"An IP client allows the integration of non-UCS systems into the IP "
"management (DNS/DHCP), e.g., for network printers or routers."
msgstr ""

#: ../../domain-ldap/system-roles.rst:101
msgid "Windows Domaincontroller"
msgstr ""

#: ../../domain-ldap/system-roles.rst:103
msgid ""
"Windows domain controllers in a Samba/AD environment are operated with "
"this system role."
msgstr ""

#: ../../domain-ldap/system-roles.rst:109
msgid "Windows Workstation/Server"
msgstr ""

#: ../../domain-ldap/system-roles.rst:111
msgid ""
"Windows clients and Windows |UCSMANAGEDNODE|\\ s are managed with this "
"system role."
msgstr ""

