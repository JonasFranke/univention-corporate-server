#!/bin/bash
#
# Univention Monitoring Client
#  join script
#
# Copyright 2022 Univention GmbH
#
# https://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <https://www.gnu.org/licenses/>.

## joinscript api: bindpwdfile

VERSION=1

. /usr/share/univention-join/joinscripthelper.lib
. /usr/share/univention-lib/all.sh
joinscript_init

eval "$(univention-config-registry shell)"

univention-directory-manager container/cn create "$@" --ignore_exists \
	--position="$ldap_base" \
	--set name="monitoring" \
	--set description="Monitoring objects" || die

ucs_registerLDAPExtension "$@" \
	--ucsversionstart 4.4-1 \
	--ucsversionend 5.99-0 \
	--schema /usr/lib/univention-monitoring-client/schema/univention-monitoring.schema || die

ucs_registerLDAPExtension "$@" \
	--ucsversionstart 5.0-0 \
	--ucsversionend 5.99-0 \
	--udm_syntax /usr/lib/univention-monitoring-client/udm/syntax/monitoring.py || die

ucs_registerLDAPExtension "$@" \
	--ucsversionstart 5.0-0 \
	--ucsversionend 5.99-0 \
	--udm_hook /usr/lib/univention-monitoring-client/udm/hooks/monitoring.py || die

ucs_registerLDAPExtension "$@" \
	--ucsversionstart 5.0-0 \
	--ucsversionend 5.99-0 \
	--udm_module /usr/lib/univention-monitoring-client/udm/alert.py \
	--messagecatalog /usr/lib/univention-monitoring-client/udm/de.mo || die

univention-directory-manager settings/extended_attribute create "$@" --ignore_exists \
	--position "cn=custom attributes,cn=univention,$ldap_base" \
	--set name="ucs-monitoring" \
	--set CLIName="monitoringAlerts" \
	--set hook="MonitoringComputer" \
	--set shortDescription="Assigned monitoring alerts" \
	--append translationShortDescription='"de_DE" "zugewiesene Warnmeldungen"' \
	--append translationShortDescription='"fr_FR" "alertes assignées"' \
	--set longDescription="Assigned monitoring alerts" \
	--append translationLongDescription='"de_DE" "zugewiesene Warnmeldungen"' \
	--append translationLongDescription='"fr_FR" "alertes assignées"' \
	--set tabAdvanced="1" \
	--set tabName="Alerts" \
	--append translationTabName='"de_DE" "Warnmeldungen"' \
	--append translationTabName='"fr_FR" "Alertes"' \
	--append module="computers/domaincontroller_master" \
	--append module="computers/domaincontroller_backup" \
	--append module="computers/domaincontroller_slave" \
	--append module="computers/memberserver" \
	--set syntax=monitoringAlerts \
	--set multivalue=1 \
	--set valueRequired=0 \
	--set mayChange=1 \
	--set doNotSearch=1 \
	--set objectClass=univentionHost \
	--set ldapMapping=univentionDoesNotExists \
	--set deleteObjectClass=0 \
	--set overwriteTab=0 || die

ucs_addServiceToLocalhost "UCS Monitoring" || die

if is_ucr_false monitoring/common/defaultalerts/autocreate; then
	joinscript_save_current_version
	exit 0
fi

MONITORINGCONTAINER="cn=monitoring,$ldap_base"

univention-directory-manager monitoring/alert create "$@" --ignore_exists --position="$MONITORINGCONTAINER" \
	--set name="UNIVENTION_PING" \
	--set description="Default Service: check if host is alive" \
	--set summary="Default Service: check if host is alive" \
	--append labels='"severity" "critical"' \
	--set query="univention_ping_status != 1" || die

univention-directory-manager monitoring/alert create "$@" --ignore_exists --position="$MONITORINGCONTAINER" \
	--set name="UNIVENTION_PING_WARNING" \
	--set alertGroup="UNIVENTION_PING" \
	--set description="Default Service: check if host is alive" \
	--set summary="Default Service: check if host is alive" \
	--append labels='"severity" "warning"' \
	--set query="univention_ping_status != 1" || die

univention-directory-manager monitoring/alert create "$@" --ignore_exists --position="$MONITORINGCONTAINER" \
	--set name="UNIVENTION_DISK_ROOT" \
	--set description="Default Service: check if / is out of diskspace" \
	--set summary="Default Service: check if / is out of diskspace" \
	--append labels='"severity" "critical"' \
	--set query='(100 / node_filesystem_size_bytes{mountpoint="/"}) * node_filesystem_free_bytes{mountpoint="/"} >= 90' || die

univention-directory-manager monitoring/alert create "$@" --ignore_exists --position="$MONITORINGCONTAINER" \
	--set name="UNIVENTION_DISK_ROOT_WARNING" \
	--set alertGroup="UNIVENTION_DISK_ROOT" \
	--set description="Default Service: check if / is out of diskspace" \
	--set summary="Default Service: check if / is out of diskspace" \
	--append labels='"severity" "warning"' \
	--set query='(100 / node_filesystem_size_bytes{mountpoint="/"}) * node_filesystem_free_bytes{mountpoint="/"} >= 75' || die

univention-directory-manager monitoring/alert create "$@" --ignore_exists --position="$MONITORINGCONTAINER" \
	--set name="UNIVENTION_DNS" \
	--set description="Default Service: check if service dns is ok" \
	--set summary="Default Service: check if service dns is ok" \
	--set for="5m" \
	--append labels='"severity" "critical"' \
	--set query="univention_dns_resolveable != 1" || die

univention-directory-manager monitoring/alert create "$@" --ignore_exists --position="$MONITORINGCONTAINER" \
	--set name="UNIVENTION_SWAP_WARNING" \
	--set alertGroup="UNIVENTION_SWAP" \
	--set description="Default Service: check if swap device is out of free space" \
	--set summary="Default Service: check if swap device is out of free space" \
	--set for="5m" \
	--append labels='"severity" "warning"' \
	--set query="(node_memory_SwapTotal_bytes - node_memory_SwapFree_bytes) * 100 / node_memory_SwapTotal_bytes <= 40" || die

univention-directory-manager monitoring/alert create "$@" --ignore_exists --position="$MONITORINGCONTAINER" \
	--set name="UNIVENTION_SWAP" \
	--set description="Default Service: check if swap device is out of free space" \
	--set summary="Default Service: check if swap device is out of free space" \
	--append labels='"severity" "critical"' \
	--set query="(node_memory_SwapTotal_bytes - node_memory_SwapFree_bytes) * 100 / node_memory_SwapTotal_bytes <= 20" || die

univention-directory-manager monitoring/alert create "$@" --ignore_exists --position="$MONITORINGCONTAINER" \
	--set name="UNIVENTION_LDAP_AUTH" \
	--set description="Default Service: check if service ldap is ok using authenticated bind" \
	--set summary="Default Service: check if service ldap is ok using authenticated bind" \
	--set for="5m" \
	--append labels='"severity" "critical"' \
	--set query="univention_ldap_reachable != 1" || die

univention-directory-manager monitoring/alert create "$@" --ignore_exists --position="$MONITORINGCONTAINER" \
	--set name="UNIVENTION_NTP" \
	--set description="Default Service: check if service ntp is ok" \
	--set summary="Default Service: check if service ntp is ok" \
	--set for="5m" \
	--append labels='"severity" "critical"' \
	--set query="univention_ntp_offset_seconds >= 60" || die

univention-directory-manager monitoring/alert create "$@" --ignore_exists --position="$MONITORINGCONTAINER" \
	--set name="UNIVENTION_NTP_WARNING" \
	--set alertGroup="UNIVENTION_NTP" \
	--set description="Default Service: check if service ntp is ok" \
	--set summary="Default Service: check if service ntp is ok" \
	--set for="5m" \
	--append labels='"severity" "warning"' \
	--set query="univention_ntp_offset_seconds >= 10" || die

univention-directory-manager monitoring/alert create "$@" --ignore_exists --position="$MONITORINGCONTAINER" \
	--set name="UNIVENTION_SMTP" \
	--set description="Default Service: check if service smtp is ok" \
	--set summary="Default Service: check if service smtp is ok" \
	--set for="5m" \
	--append labels='"severity" "critical"' \
	--set query="univention_smtp_reachable != 1" || die

univention-directory-manager monitoring/alert create "$@" --ignore_exists --position="$MONITORINGCONTAINER" \
	--set name="UNIVENTION_SSL_WARNING" \
	--set alertGroup="UNIVENTION_SSL" \
	--set description="Default Service: check if ssl certificate is valid" \
	--set summary="Default Service: check if ssl certificate is valid" \
	--append labels='"severity" "warning"' \
	--set query="univention_ssl_certificate_expiry_seconds >= 3456000" || die # 40 days

univention-directory-manager monitoring/alert create "$@" --ignore_exists --position="$MONITORINGCONTAINER" \
	--set name="UNIVENTION_SSL" \
	--set description="Default Service: check if ssl certificate is valid" \
	--set summary="Default Service: check if ssl certificate is valid" \
	--append labels='"severity" "critical"' \
	--set query="univention_ssl_certificate_expiry_seconds >= 1728000" || die # 20 days

univention-directory-manager monitoring/alert create "$@" --ignore_exists --position="$MONITORINGCONTAINER" \
	--set name="UNIVENTION_LOAD_WARNING" \
	--set alertGroup="UNIVENTION_LOAD" \
	--set description="Default Service: check if cpu load exceeds specified limits" \
	--set summary="Default Service: check if cpu load exceeds specified limits" \
	--set for="5m" \
	--append labels='"severity" "warning"' \
	--set query="node_load1 > 3 or node_load5 > 2 or node_load15 > 1" || die

univention-directory-manager monitoring/alert create "$@" --ignore_exists --position="$MONITORINGCONTAINER" \
	--set name="UNIVENTION_LOAD" \
	--set description="Default Service: check if cpu load exceeds specified limits" \
	--set summary="Default Service: check if cpu load exceeds specified limits" \
	--set for="5m" \
	--append labels='"severity" "critical"' \
	--set query="node_load1 > 6 or node_load5 > 4 or node_load15 > 2" || die

univention-directory-manager monitoring/alert create "$@" --ignore_exists --position="$MONITORINGCONTAINER" \
	--set name="UNIVENTION_REPLICATION_WARNING" \
	--set alertGroup="UNIVENTION_REPLICATION" \
	--set description="Default Service: check if ldap replication is uptodate" \
	--set summary="Default Service: check if ldap replication is uptodate" \
	--set for="5m" \
	--append labels='"severity" "warning"' \
	--set query="univention_listener_replication_difference > 10" || die

univention-directory-manager monitoring/alert create "$@" --ignore_exists --position="$MONITORINGCONTAINER" \
	--set name="UNIVENTION_REPLICATION" \
	--set description="Default Service: check if ldap replication is uptodate" \
	--set summary="Default Service: check if ldap replication is uptodate" \
	--set for="5m" \
	--append labels='"severity" "critical"' \
	--set query="univention_listener_replication_difference > 50 or univention_listener_replication_difference == -1 or univention_listener_failed_ldif_exists == 1" || die

# TODO UNIVENTION_REPLICATION: what about "CRITICAL if no change of transaction ID over last <cnt> checks"

univention-directory-manager monitoring/alert create "$@" --ignore_exists --position="$MONITORINGCONTAINER" \
	--set name="UNIVENTION_NSCD" \
	--set description="Default Service: check if nscd process is present" \
	--set summary="Default Service: check if nscd process is present" \
	--set for="5m" \
	--append labels='"severity" "critical"' \
	--set query="univention_nscd_running != 1" || die

univention-directory-manager monitoring/alert create "$@" --ignore_exists --position="$MONITORINGCONTAINER" \
	--set name="UNIVENTION_NSCD2" \
	--set description="Default Service: check if nscd process is present (ignores docker)" \
	--set summary="Default Service: check if nscd process is present (ignores docker)" \
	--set for="5m" \
	--append labels='"severity" "critical"' \
	--set query="univention_nscd_responding != 1" || die

univention-directory-manager monitoring/alert create "$@" --ignore_exists --position="$MONITORINGCONTAINER" \
	--set name="UNIVENTION_KPASSWDD" \
	--set description="Default Service: check if kpasswdd process is present" \
	--set summary="Default Service: check if kpasswdd process is present" \
	--append labels='"severity" "critical"' \
	--set query="univention_kpasswdd_running != 1" || die

univention-directory-manager monitoring/alert create "$@" --ignore_exists --position="$MONITORINGCONTAINER" \
	--set name="UNIVENTION_WINBIND" \
	--set description="Default Service: check if winbind is functional" \
	--set summary="Default Service: check if winbind is functional" \
	--append labels='"severity" "critical"' \
	--set query="univention_winbind_secret_ok != 1" || die

univention-directory-manager monitoring/alert create "$@" --ignore_exists --position="$MONITORINGCONTAINER" \
	--set name="UNIVENTION_SMBD" \
	--set description="Default Service: check if smbd is functional" \
	--set summary="Default Service: check if smbd is functional" \
	--set for="5m" \
	--append labels='"severity" "critical"' \
	--set query="univention_smbd_accessible != 1" || die

univention-directory-manager monitoring/alert create "$@" --ignore_exists --position="$MONITORINGCONTAINER" \
	--set name="UNIVENTION_NMBD" \
	--set description="Default Service: check if nmbd is functional" \
	--set summary="Default Service: check if nmbd is functional" \
	--set for="5m" \
	--append labels='"severity" "critical"' \
	--set query="univention_nmbd_running != 1" || die

univention-directory-manager monitoring/alert create "$@" --ignore_exists --position="$MONITORINGCONTAINER" \
	--set name="UNIVENTION_JOINSTATUS" \
	--set description='Default Service: check if system has been joined successfully
    {{ range query "univention_join_status" }}
        {{if or (eq .Value -1) (eq .Value 1)}}
          univention_join_status has value -1 or 1 => /etc/machine.secret not found - system not joined yet?
        {{end}}
        {{if (eq .Value 2)}}
          univention_join_status has value 2 => ldapsearch auth failed
        {{end}}
        {{if (eq .Value 3)}}
          univention_join_status has value 3 => ldapsearch auth or TLS failed
        {{end}}
        {{if (eq .Value 4)}}
          univention_join_status has value 4 => Cannot find /usr/share/univention-join/.joined or /var/univention-join/joined
        {{end}}
        {{if (eq .Value 6)}}
          univention_join_status has value 6 => some join scripts must be called
        {{end}}
    {{ end }}
	' \
	--set summary="Default Service: check if system has been joined successfully" \
	--append labels='"severity" "critical"' \
	--set query="univention_join_status != 0" || die

univention-directory-manager monitoring/alert create "$@" --ignore_exists --position="$MONITORINGCONTAINER" \
	--set name="UNIVENTION_PACKAGE_STATUS" \
	--set description="Default Service: check if dpkg status of system is healthy" \
	--set summary="Default Service: check if dpkg status of system is healthy" \
	--append labels='"severity" "critical"' \
	--set query="univention_package_status_ok != 1" || die

univention-directory-manager monitoring/alert create "$@" --ignore_exists --position="$MONITORINGCONTAINER" \
	--set name="UNIVENTION_SLAPD_MDB_MAXSIZE_WARNING" \
	--set description="Default Service: check slapd mdb database size" \
	--set summary="Default Service: check slapd mdb database size" \
	--append labels='"severity" "warning"' \
	--set query="univention_slapd_mdb_size_used_ratio > 75 or univention_slapd_translog_mdb_size_used_ratio > 75" || die

univention-directory-manager monitoring/alert create "$@" --ignore_exists --position="$MONITORINGCONTAINER" \
	--set name="UNIVENTION_SLAPD_MDB_MAXSIZE" \
	--set description="Default Service: check slapd mdb database size" \
	--set summary="Default Service: check slapd mdb database size" \
	--append labels='"severity" "critical"' \
	--set query="univention_slapd_mdb_size_used_ratio > 90 or univention_slapd_translog_mdb_size_used_ratio > 90" || die

univention-directory-manager monitoring/alert create "$@" --ignore_exists --position="$MONITORINGCONTAINER" \
	--set name="UNIVENTION_LISTENER_MDB_MAXSIZE_WARNING" \
	--set description="Default Service: check listener mdb database size" \
	--set summary="Default Service: check listener mdb database size" \
	--append labels='"severity" "warning"' \
	--set query="univention_listener_mdb_size_used_ratio > 75" || die

univention-directory-manager monitoring/alert create "$@" --ignore_exists --position="$MONITORINGCONTAINER" \
	--set name="UNIVENTION_LISTENER_MDB_MAXSIZE" \
	--set description="Default Service: check listener mdb database size" \
	--set summary="Default Service: check listener mdb database size" \
	--append labels='"severity" "critical"' \
	--set query="univention_listener_mdb_size_used_ratio > 90" || die

CHECKS=(
	"UNIVENTION_PING"
	"UNIVENTION_DISK_ROOT"
	"UNIVENTION_DISK_ROOT_WARNING"
	"UNIVENTION_DNS"
	"UNIVENTION_SWAP_WARNING"
	"UNIVENTION_SWAP"
	"UNIVENTION_LDAP_AUTH"
	"UNIVENTION_NTP"
	"UNIVENTION_NTP_WARNING"
	"UNIVENTION_SMTP"
	"UNIVENTION_SSL_WARNING"
	"UNIVENTION_SSL"
	"UNIVENTION_LOAD_WARNING"
	"UNIVENTION_LOAD"
	"UNIVENTION_REPLICATION_WARNING"
	"UNIVENTION_REPLICATION"
	"UNIVENTION_NSCD"
	"UNIVENTION_NSCD2"
	"UNIVENTION_KPASSWDD"
	"UNIVENTION_WINBIND"
	"UNIVENTION_SMBD"
	"UNIVENTION_NMBD"
	"UNIVENTION_JOINSTATUS"
	"UNIVENTION_PACKAGE_STATUS"
	"UNIVENTION_SLAPD_MDB_MAXSIZE_WARNING"
	"UNIVENTION_SLAPD_MDB_MAXSIZE"
	"UNIVENTION_LISTENER_MDB_MAXSIZE_WARNING"
	"UNIVENTION_LISTENER_MDB_MAXSIZE"
)

case "$server_role" in
	domaincontroller_master)
		ROLE_IGNORE=()
		;;
	domaincontroller_backup)
		ROLE_IGNORE=()
		;;
	domaincontroller_slave)
		ROLE_IGNORE=(
			"UNIVENTION_SSL_WARNING"
			"UNIVENTION_SSL"
		)
		;;
	memberserver)
		ROLE_IGNORE=(
			"UNIVENTION_LDAP_AUTH"
			"UNIVENTION_SSL_WARNING"
			"UNIVENTION_SSL"
			"UNIVENTION_SLAPD_MDB_MAXSIZE_WARNING"
			"UNIVENTION_LISTENER_MDB_MAXSIZE_WARNING"
			"UNIVENTION_LISTENER_MDB_MAXSIZE"
		)
		;;
esac

if ! is_ucr_false monitoring/client/autoregister; then
	# univention-directory-manager "computers/${server_role}" modify "$@" --dn "$ldap_hostdn" --append-option="monitoring" || die
	for name in "${CHECKS[@]}"; do
		if printf '%s\0' "${ROLE_IGNORE[@]}" | grep -Fxqz "$name"; then
			continue
		fi
		univention-directory-manager monitoring/alert modify "$@" \
			--dn "cn=$name,$MONITORINGCONTAINER" \
			--append assignedHosts="${ldap_hostdn}" || die
	done
fi

joinscript_save_current_version

exit 0
